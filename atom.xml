<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZhangHy&#39;s Zone!</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://weibo.com/"/>
  <updated>2018-12-14T09:57:36.652Z</updated>
  <id>http://weibo.com/</id>
  
  <author>
    <name>ZhangHy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Ubuntu14.04安装并配置FTP</title>
    <link href="http://weibo.com/2018/11/23/Ubuntu14-04%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AEFTP/"/>
    <id>http://weibo.com/2018/11/23/Ubuntu14-04安装并配置FTP/</id>
    <published>2018-11-23T03:50:54.000Z</published>
    <updated>2018-12-14T09:57:36.652Z</updated>
    
    <content type="html"><![CDATA[<p>之前在Ubuntu上装的虚拟机的空间不够，拉取两个分支的时候就会显示disk不足，虚拟机上只能存在一个分支代码，想要从宿主机把分支代码通过FTP传输到虚拟机，但是宿主机并不支持FTP，接下来就是主要接受我在宿主机和虚拟机安装和配置FTP的步骤。<br><a id="more"></a></p>
<h2 id="安装vsftpd"><a href="#安装vsftpd" class="headerlink" title="安装vsftpd"></a>安装vsftpd</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#sudo apt-get update  //防止出现"有 几个软件包无法下载，您可以运行apt-get update------"的错误提示，导致无法安装</span></div><div class="line"><span class="comment">#sudo apt-get install vsftpd</span></div></pre></td></tr></table></figure>
<h2 id="判断vsftpd是否安装成功"><a href="#判断vsftpd是否安装成功" class="headerlink" title="判断vsftpd是否安装成功"></a>判断vsftpd是否安装成功</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#sudo service vsftpd restart</span></div></pre></td></tr></table></figure>
<p><img src="/2018/11/23/Ubuntu14-04安装并配置FTP/restart_vsftpd.png" alt=""><br>上图表示处于运行状态，安装服务成功。</p>
<h2 id="以”-home-ubuntu-zhy-version”目录作为用户主目录"><a href="#以”-home-ubuntu-zhy-version”目录作为用户主目录" class="headerlink" title="以”/home/ubuntu_zhy/version”目录作为用户主目录"></a>以”/home/ubuntu_zhy/version”目录作为用户主目录</h2><p>同样可以新建目录作为用户主目录，使用以下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /home/uftp</div></pre></td></tr></table></figure></p>
<h2 id="新建用户uftp并设置密码"><a href="#新建用户uftp并设置密码" class="headerlink" title="新建用户uftp并设置密码"></a>新建用户uftp并设置密码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#sudo useradd -d /home/ubuntu_zhy/version -s /bin/bash uftp</span></div><div class="line"><span class="comment">#sudo passwd uftp //输入两次</span></div></pre></td></tr></table></figure>
<h2 id="修改配置文件-etc-vsftpd-conf"><a href="#修改配置文件-etc-vsftpd-conf" class="headerlink" title="修改配置文件/etc/vsftpd.conf"></a>修改配置文件/etc/vsftpd.conf</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#sudo vi /etc/vsftpd.conf</span></div></pre></td></tr></table></figure>
<p>新增：<br>userlist_deny=NO      //指定user_list的文件，里面放允许ftp登陆的本地用户<br>userlist_enable=YES   //指定user_list的文件，里面放允许ftp登陆的本地用户<br>userlist_file=/etc/allowed_users   //记录允许本地登陆用户名的文件<br>seccomp_sandbox=NO    //不配置可能导致530的问题<br>修改：<br>local_enable=YES      //允许本地用户登陆</p>
<h2 id="新建-etc-allowed-users文件"><a href="#新建-etc-allowed-users文件" class="headerlink" title="新建/etc/allowed_users文件"></a>新建/etc/allowed_users文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#sudo vi /etc/allowed_users</span></div></pre></td></tr></table></figure>
<p>输入uftp</p>
<h2 id="查看-etc-ftpusers文件中的内容"><a href="#查看-etc-ftpusers文件中的内容" class="headerlink" title="查看/etc/ftpusers文件中的内容"></a>查看/etc/ftpusers文件中的内容</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#sudo vi /etc/ftpusers</span></div></pre></td></tr></table></figure>
<p>看一看有没有uftp这个用户名;<br>如果没有，就直接退出。<br>如果有就删除uftp,因为这个文件中记录的是不能访问FTP服务器的用户清单。</p>
<h2 id="使用WinSCP登录FTP服务器"><a href="#使用WinSCP登录FTP服务器" class="headerlink" title="使用WinSCP登录FTP服务器"></a>使用WinSCP登录FTP服务器</h2><p>运行WinSCP(没有就下载安装WinSCP)–&gt;输入IP、用户名、密码–&gt;保存–&gt;勾选”保存密码”–&gt;确定–&gt;登录–&gt;登录成功。<br><img src="/2018/11/23/Ubuntu14-04安装并配置FTP/winscp.png" alt=""></p>
<h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#sudo apt-get remove --purge vsftpd //(--purge 选项表示彻底删除改软件和相关文件)</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前在Ubuntu上装的虚拟机的空间不够，拉取两个分支的时候就会显示disk不足，虚拟机上只能存在一个分支代码，想要从宿主机把分支代码通过FTP传输到虚拟机，但是宿主机并不支持FTP，接下来就是主要接受我在宿主机和虚拟机安装和配置FTP的步骤。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://weibo.com/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP结合Linux命令实现页面下载</title>
    <link href="http://weibo.com/2018/11/02/PHP%E7%BB%93%E5%90%88Linux%E5%91%BD%E4%BB%A4%E5%AE%9E%E7%8E%B0%E9%A1%B5%E9%9D%A2%E4%B8%8B%E8%BD%BD/"/>
    <id>http://weibo.com/2018/11/02/PHP结合Linux命令实现页面下载/</id>
    <published>2018-11-02T01:59:25.000Z</published>
    <updated>2018-12-14T10:02:27.670Z</updated>
    
    <content type="html"><![CDATA[<p>这是昨天测试发现的一个问题，之前只考虑到批量下载，由于自己造的数据比较少，自测不完全，所以下载压缩包之后造成的问题就是把整个目录的文件全部下载了，不是根据勾选的项目来进行下载，而且由于没有取分pdf和html类型，不管是多个下载（压缩包）和单个直接下载，造成下载html的时候报文件不存在的错误提示，以下是我优化之后的代码：<br><a id="more"></a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">'multi'</span>]) &#123;   //获取到multi参数，表明下载多个，需要进行压缩、打包</div><div class="line">        <span class="variable">$dir_path</span> = <span class="string">'/disk/report_pdf/'</span>;   //指明文件路径</div><div class="line">        //进入目录并创建临时文件夹</div><div class="line">        <span class="built_in">exec</span>(<span class="string">'cd '</span>.<span class="variable">$dir_path</span>.<span class="string">' &amp;&amp; mkdir tmp_report'</span>);</div><div class="line">        //将勾选的项目名称作为参数进行传递，然后对字符串按逗号进行切割为数组</div><div class="line">        <span class="variable">$name_array</span> = explode(<span class="string">','</span>,<span class="variable">$_GET</span>[<span class="string">'pdf_file_name'</span>]);</div><div class="line">        //由于不带key，采用<span class="keyword">for</span>循环</div><div class="line">        <span class="keyword">for</span>(<span class="variable">$i</span>=0;<span class="variable">$i</span>&lt;=count(<span class="variable">$name_array</span>);<span class="variable">$i</span>++)&#123;</div><div class="line">            <span class="keyword">if</span>(strpos(<span class="variable">$name_array</span>[<span class="variable">$i</span>],<span class="string">'html'</span>) !== <span class="literal">false</span>) &#123;   //文件类型为html</div><div class="line">                //截取字符串，只保留与外层文件夹同名的部分</div><div class="line">                <span class="variable">$file_name</span> = substr(<span class="variable">$name_array</span>[<span class="variable">$i</span>], 0, -14);</div><div class="line">            &#125;<span class="keyword">else</span>&#123;   //文件类型为pdf，少截取一位</div><div class="line">                //截取字符串，只保留与外层文件夹同名的部分</div><div class="line">                <span class="variable">$file_name</span> = substr(<span class="variable">$name_array</span>[<span class="variable">$i</span>], 0, -13);</div><div class="line">            &#125;</div><div class="line">            //根据截取的字符串找到对应的目录，并根据文件名查找到文件，然后将查找到的文件复制到之前创建的临时文件夹</div><div class="line">            <span class="built_in">exec</span>(<span class="string">'cd '</span>.<span class="variable">$dir_path</span>.<span class="string">'/'</span>.<span class="variable">$file_name</span>.<span class="string">'/ &amp;&amp; ls | grep '</span>.<span class="variable">$name_array</span>[<span class="variable">$i</span>].<span class="string">' |xargs -I &#123;&#125; cp &#123;&#125; ../tmp_report'</span>);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        //进入创建的临时文件夹，使用tar命令进行压缩、打包</div><div class="line">        <span class="built_in">exec</span>(<span class="string">'cd '</span>.<span class="variable">$dir_path</span>.<span class="string">'tmp_report/ &amp;&amp; tar -zcvf report.tar.gz ./*'</span>);</div><div class="line">        //定义压缩包文件路径</div><div class="line">        <span class="variable">$pcap_file_path</span> = <span class="string">'/disk/report_pdf/tmp_report/report.tar.gz'</span>;</div><div class="line">        <span class="variable">$pcap_file_name</span> = <span class="string">'report.tar.gz'</span>;   //重定义压缩包名称</div><div class="line">        <span class="variable">$fd</span> = fopen (<span class="variable">$pcap_file_path</span>, <span class="string">"r"</span> );   //打开文件</div><div class="line">        <span class="variable">$size</span> = filesize(<span class="variable">$pcap_file_path</span>) ;   //指定文件大小</div><div class="line"></div><div class="line">        //输入文件标签</div><div class="line">        header(<span class="string">'Content-Encoding: none'</span>);</div><div class="line">        header(<span class="string">'Content-Type: application/force-download'</span>);</div><div class="line">        header(<span class="string">'Content-Type: application/octet-stream'</span>);</div><div class="line">        header(<span class="string">'Content-Type: application/download'</span>);</div><div class="line">        header(<span class="string">'Content-Description: File Transfer'</span>);</div><div class="line">        header(<span class="string">'Accept-Ranges: bytes'</span>);</div><div class="line">        header( <span class="string">"Accept-Length: <span class="variable">$size</span>"</span>);</div><div class="line">        header( <span class="string">'Content-Transfer-Encoding: binary'</span> );</div><div class="line">        header( <span class="string">"Content-Disposition: attachment; filename=<span class="variable">$pcap_file_name</span>"</span> );</div><div class="line">        header(<span class="string">'Pragma: no-cache'</span>);</div><div class="line">        header(<span class="string">'Expires: 0'</span>);</div><div class="line"></div><div class="line">        //输出文件内容</div><div class="line">        ob_clean();   //清除输出缓存内容</div><div class="line">        flush();   //刷新系统输出缓存</div><div class="line">        <span class="built_in">echo</span> fread(<span class="variable">$fd</span>, <span class="variable">$size</span>);   //读取文件内容并直接输出到浏览器</div><div class="line">        fclose (<span class="variable">$fd</span>);   //关闭文件句柄</div><div class="line">        unlink(<span class="variable">$pcap_file_path</span>);   //指定删除文件</div><div class="line">        <span class="built_in">exec</span>(<span class="string">'cd '</span>.<span class="variable">$dir_path</span>.<span class="string">'tmp_report/ &amp;&amp; rm -rf *'</span>);   //进入船舰的临时文件夹，并清空文件夹，防止文件累积</div><div class="line">        showSuccess(<span class="string">'reporter_history_show'</span>);   //返回页面</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;   //没有multi参数，表明只进行单个下载</div><div class="line">        <span class="built_in">exec</span>(<span class="string">"rm -rf ./attachements/report/"</span>);   //删除附件文件夹</div><div class="line">        <span class="keyword">if</span>(strpos(<span class="variable">$param</span>[<span class="string">'pdf_file_name'</span>],<span class="string">'html'</span>) !== <span class="literal">false</span>) &#123;</div><div class="line">            //文件类型为html，指定外层目录</div><div class="line">            <span class="variable">$local</span> = substr(<span class="variable">$param</span>[<span class="string">'pdf_file_name'</span>], 0, -14);</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            //文件类型为pdf，指定外层目录</div><div class="line">            <span class="variable">$local</span> = substr(<span class="variable">$param</span>[<span class="string">'pdf_file_name'</span>], 0, -13);</div><div class="line">        &#125;</div><div class="line">        //指定文件名称</div><div class="line">        <span class="variable">$name</span> = <span class="variable">$report_dir</span>.<span class="variable">$local</span>.<span class="string">'/'</span>.<span class="variable">$param</span>[<span class="string">'pdf_file_name'</span>];</div><div class="line">        <span class="variable">$file</span> = <span class="variable">$param</span>[<span class="string">'pdf_file_name'</span>];</div><div class="line">        //对html和pdf文件类型的文件是否存在做区分</div><div class="line">        <span class="keyword">if</span>(strpos(<span class="variable">$param</span>[<span class="string">'pdf_file_name'</span>],<span class="string">'.pdf'</span>))&#123;</div><div class="line">            <span class="keyword">if</span> (file_exists(<span class="variable">$name</span>) == <span class="literal">false</span>) &#123;   //不存在则返回错误信息</div><div class="line">                showError(<span class="string">'文件不存在'</span>, 1);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="keyword">if</span> (!file_exists(<span class="string">'./attachements/report'</span>)) mkdir(<span class="string">"./attachements/report"</span>);</div><div class="line">                header(<span class="string">'Content-type: application/pdf'</span>);</div><div class="line">                header(<span class="string">'Content-Disposition: attachment; filename="'</span>.<span class="variable">$file</span>.<span class="string">'"'</span>);</div><div class="line">                readfile(<span class="variable">$name</span>);</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">if</span> (file_exists(<span class="variable">$name</span>) == <span class="literal">false</span>) &#123;</div><div class="line">                showError(<span class="string">'文件不存在'</span>, 1);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="keyword">if</span> (!file_exists(<span class="string">'./attachements/report'</span>)) mkdir(<span class="string">"./attachements/report"</span>);</div><div class="line">                Header(<span class="string">"Pragma: public"</span>);</div><div class="line">                Header(<span class="string">"Cache-Control: private"</span>);</div><div class="line">                Header(<span class="string">"Content-type: text/plain"</span>);</div><div class="line">                Header(<span class="string">"Accept-Ranges: bytes"</span>);</div><div class="line">                header(<span class="string">'Content-Disposition: attachment; filename="'</span>.<span class="variable">$file</span>.<span class="string">'"'</span>);</div><div class="line">                ob_clean();</div><div class="line">                flush();</div><div class="line">                readfile(<span class="variable">$name</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是昨天测试发现的一个问题，之前只考虑到批量下载，由于自己造的数据比较少，自测不完全，所以下载压缩包之后造成的问题就是把整个目录的文件全部下载了，不是根据勾选的项目来进行下载，而且由于没有取分pdf和html类型，不管是多个下载（压缩包）和单个直接下载，造成下载html的时候报文件不存在的错误提示，以下是我优化之后的代码：&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PHP，Linux" scheme="http://weibo.com/categories/PHP%EF%BC%8CLinux/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP嵌入Linux命令实现文件的操作</title>
    <link href="http://weibo.com/2018/10/28/PHP%E5%B5%8C%E5%85%A5Linux%E5%91%BD%E4%BB%A4%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E7%9A%84%E6%93%8D%E4%BD%9C/"/>
    <id>http://weibo.com/2018/10/28/PHP嵌入Linux命令实现文件的操作/</id>
    <published>2018-10-28T06:32:08.000Z</published>
    <updated>2018-12-14T09:55:04.503Z</updated>
    
    <content type="html"><![CDATA[<p>今天在工作中遇到的一个新需求，后台不提供数据接口，需要我从设备上获取数据进行显示，并且要实现搜索和查询功能，单纯的PHP代码是无法实现这个需求的，只有通过Linux命令实现文件的移动和查找才能实现，下面仔细说明以下我的实现方法：<br>直接上代码：<br><a id="more"></a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$file_path</span> = <span class="string">'/disk/http_upload_file/txt/'</span>;</div><div class="line"><span class="keyword">if</span>( <span class="variable">$get_url_param</span> == <span class="string">'http_file_upload_download_json'</span>) &#123;</div><div class="line">    <span class="variable">$param</span> = getPageAttr();</div><div class="line">    <span class="variable">$filter</span> = isset(<span class="variable">$_POST</span>[<span class="string">'filter'</span>]) ? <span class="variable">$_POST</span>[<span class="string">'filter'</span>] : <span class="string">''</span>;</div><div class="line">    <span class="variable">$arr</span> = scandir(<span class="variable">$file_path</span>);</div><div class="line">    <span class="variable">$total</span> = count(<span class="variable">$arr</span>)-2;</div><div class="line"></div><div class="line">    <span class="keyword">if</span>(isset(<span class="variable">$_POST</span>[<span class="string">'filter'</span>]) &amp;&amp; <span class="variable">$_POST</span>[<span class="string">'filter'</span>]!=<span class="string">''</span>)&#123;</div><div class="line">//        <span class="built_in">exec</span>(<span class="string">'cd '</span>.<span class="variable">$file_path</span>.<span class="string">' &amp;&amp; ls -lh | grep '</span>.<span class="variable">$filter</span>.<span class="string">' |xargs -I &#123;&#125; mv &#123;&#125; ./'</span>.<span class="variable">$filter</span>);</div><div class="line">//        <span class="built_in">exec</span>(<span class="string">'cd '</span>.<span class="variable">$file_path</span>.<span class="string">" &amp;&amp; ls -tr | grep txt |sed  -n '1,"</span>.<span class="variable">$total</span>.<span class="string">"p' | bxargs -I &#123;&#125; cp &#123;&#125; ./tmp</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">        //创建临时目录</span></div><div class="line"><span class="string">        exec('cd '.<span class="variable">$file_path</span>.' &amp;&amp; mkdir tmp_filter');</span></div><div class="line"><span class="string">        //将标记区间的数据发送到临时文件夹</span></div><div class="line"><span class="string">        exec("</span><span class="built_in">cd</span> <span class="string">".<span class="variable">$file_path</span>."</span>tmp_filter/ &amp;&amp; ls -t ..| grep txt|sed  -n <span class="string">'1,".$total."p'</span> |xargs touch<span class="string">");</span></div><div class="line"><span class="string">        //按照搜索条件创建以搜索条件为名称的临时文件夹</span></div><div class="line"><span class="string">        exec('cd '.<span class="variable">$file_path</span>.'tmp_filter/'.' &amp;&amp; mkdir '.<span class="variable">$filter</span>);</span></div><div class="line"><span class="string">        //将搜索出来的文件复制到刚刚创建的临时文件夹</span></div><div class="line"><span class="string">        exec('cd '.<span class="variable">$file_path</span>.'tmp_filter/'.' &amp;&amp; ls | grep '.<span class="variable">$filter</span>.' |xargs -I &#123;&#125; cp &#123;&#125; ./'.<span class="variable">$filter</span>);</span></div><div class="line"><span class="string">        //php遍历查找临时文件夹符合条件的文件</span></div><div class="line"><span class="string">        <span class="variable">$txt</span> = str_replace(<span class="variable">$file_path</span>.'tmp_filter/'.<span class="variable">$filter</span>.'/','', glob(<span class="variable">$file_path</span>.'tmp_filter/'.<span class="variable">$filter</span>.'/'."</span>*.txt<span class="string">"));</span></div><div class="line"><span class="string">        //php计算所有文件总数，用于计算多少页数据</span></div><div class="line"><span class="string">        <span class="variable">$arr</span> = scandir(<span class="variable">$file_path</span>.'tmp_filter/'.<span class="variable">$filter</span>);</span></div><div class="line"><span class="string">        <span class="variable">$total</span> = count(<span class="variable">$arr</span>)-2;</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">        exec('cd '.<span class="variable">$file_path</span>.'tmp_filter/ &amp;&amp; rm -rf '.<span class="variable">$filter</span>);</span></div><div class="line"><span class="string">        exec('cd '.<span class="variable">$file_path</span>.' &amp;&amp; rm -rf tmp_filter');</span></div><div class="line"><span class="string">//"</span>);</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        <span class="variable">$start</span> = (<span class="variable">$param</span>[<span class="string">'page'</span>]-1)*50+1;  //起始下标</div><div class="line">        <span class="variable">$end</span> = <span class="variable">$param</span>[<span class="string">'page'</span>]*50;  //结束下标</div><div class="line">        <span class="built_in">exec</span>(<span class="string">"cd "</span>.<span class="variable">$file_path</span>.<span class="string">" &amp;&amp; mkdir tmp"</span>);  //创建临时目录</div><div class="line">        //将标记区间的数据发送到临时文件夹</div><div class="line">        <span class="built_in">exec</span>(<span class="string">"cd "</span>.<span class="variable">$file_path</span>.<span class="string">"tmp/ &amp;&amp; ls -t ..| grep txt|sed  -n '"</span>.<span class="variable">$start</span>.<span class="string">","</span>.<span class="variable">$end</span>.<span class="string">"p' |xargs touch"</span>);</div><div class="line">        //php遍历查找临时文件夹符合条件的文件</div><div class="line">        <span class="variable">$txt</span> = str_replace(<span class="variable">$file_path</span>.<span class="string">'tmp/'</span>,<span class="string">''</span>, glob(<span class="variable">$file_path</span>.<span class="string">'tmp/'</span>.<span class="string">"*.txt"</span>));</div><div class="line">        //遍历完成清空临时文件夹</div><div class="line">        <span class="built_in">exec</span>(<span class="string">"cd "</span>.<span class="variable">$file_path</span>.<span class="string">" &amp;&amp; rm -rf tmp"</span>);</div><div class="line">        //php计算所有文件总数，用于计算多少页数据</div><div class="line">        <span class="variable">$arr</span> = scandir(<span class="variable">$file_path</span>);</div><div class="line">        <span class="variable">$total</span> = count(<span class="variable">$arr</span>)-2;</div><div class="line">    &#125;</div><div class="line">    foreach (<span class="variable">$txt</span> as <span class="variable">$k</span>=&gt;<span class="variable">$v</span>) &#123;</div><div class="line">        <span class="variable">$temp</span>[][<span class="string">'filename'</span>] = <span class="variable">$v</span>;</div><div class="line">        <span class="keyword">if</span> (<span class="variable">$v</span>) &#123;</div><div class="line">            <span class="variable">$temp</span>[<span class="variable">$k</span>][<span class="string">'filemtime'</span>] = date(<span class="string">"Y-m-d H:i:s"</span>, filemtime(<span class="variable">$file_path</span> . <span class="variable">$v</span>) + 8 * 3600);</div><div class="line">            <span class="variable">$temp</span>[<span class="variable">$k</span>][<span class="string">'filesize'</span>] = filesize(<span class="variable">$file_path</span> . <span class="variable">$v</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">'sort'</span>]) <span class="variable">$sort_by</span> = <span class="variable">$_POST</span>[<span class="string">'sort'</span>];</div><div class="line">    <span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">'order'</span>]) <span class="variable">$sort_type</span> = <span class="variable">$_POST</span>[<span class="string">'order'</span>];</div><div class="line">    <span class="keyword">if</span>(<span class="variable">$sort_type</span> == <span class="string">'desc'</span>) &#123;</div><div class="line">        <span class="variable">$_sort_type</span> = SORT_DESC;</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        <span class="variable">$_sort_type</span> = SORT_ASC;</div><div class="line">    &#125;</div><div class="line">//    array_multisort(array_column(<span class="variable">$temp</span>,<span class="variable">$sort_by</span>),<span class="variable">$_sort_type</span>,<span class="variable">$temp</span>);</div><div class="line">    <span class="variable">$page</span> = array(<span class="string">'total'</span>=&gt;<span class="variable">$total</span>, <span class="string">'current'</span>=&gt; <span class="variable">$param</span>[<span class="string">'page'</span>], <span class="string">'count'</span>=&gt;<span class="variable">$param</span>[<span class="string">'count'</span>]);</div><div class="line">    <span class="built_in">echo</span> json_encode(array(<span class="string">'rows'</span>=&gt;<span class="variable">$temp</span>,<span class="string">'total'</span>=&gt;<span class="variable">$page</span>[<span class="string">'total'</span>], <span class="string">'page'</span>=&gt;<span class="variable">$page</span>));</div><div class="line">    <span class="built_in">return</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天在工作中遇到的一个新需求，后台不提供数据接口，需要我从设备上获取数据进行显示，并且要实现搜索和查询功能，单纯的PHP代码是无法实现这个需求的，只有通过Linux命令实现文件的移动和查找才能实现，下面仔细说明以下我的实现方法：&lt;br&gt;直接上代码：&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PHP,Linux" scheme="http://weibo.com/categories/PHP-Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux下打包和解压缩命令并通过PHP进行页面下载</title>
    <link href="http://weibo.com/2018/10/11/Linux%E4%B8%8B%E6%89%93%E5%8C%85%E5%92%8C%E8%A7%A3%E5%8E%8B%E7%BC%A9%E5%91%BD%E4%BB%A4%E5%B9%B6%E9%80%9A%E8%BF%87PHP%E8%BF%9B%E8%A1%8C%E9%A1%B5%E9%9D%A2%E4%B8%8B%E8%BD%BD/"/>
    <id>http://weibo.com/2018/10/11/Linux下打包和解压缩命令并通过PHP进行页面下载/</id>
    <published>2018-10-11T03:36:31.000Z</published>
    <updated>2018-12-14T09:54:42.877Z</updated>
    
    <content type="html"><![CDATA[<p>工作过程中需要将x86设备上的某个文件夹进行打包，然后实现页面下载压缩包的需求。由于工作机上面不支持ZIP工具压缩，于是采用PHP代码嵌入linux tar打包命令实现。<br>PHP代码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$dir_path</span> = <span class="string">'/disk/report_pdf/'</span>;</div><div class="line"><span class="built_in">exec</span>(<span class="string">'cd '</span>.<span class="variable">$dir_path</span>.<span class="string">' &amp;&amp; tar -zcvf report.tar.gz -C /disk/report_pdf .'</span>); </div><div class="line">// -C参数是解决打包之后带有文件路径的问题，记住最后一定要加 . 。</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<h2 id="拓展-Linux下打包和解压缩命令及参数说明："><a href="#拓展-Linux下打包和解压缩命令及参数说明：" class="headerlink" title="拓展 || Linux下打包和解压缩命令及参数说明："></a>拓展 || Linux下打包和解压缩命令及参数说明：</h2><h3 id="解压缩命令："><a href="#解压缩命令：" class="headerlink" title="解压缩命令："></a>解压缩命令：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line">.tar</div><div class="line">压缩：tar cvf FileName.tar FileName</div><div class="line">解压：tar xvf FileName.tar</div><div class="line">--------------------------------------------- </div><div class="line">.gz</div><div class="line">解压1：gunzip FileName.gz </div><div class="line">解压2：gzip -d FileName.gz </div><div class="line">压缩：gzip FileName </div><div class="line">.tar.gz </div><div class="line">解压：tar zxvf FileName.tar.gz </div><div class="line">压缩：tar zcvf FileName.tar.gz DirName </div><div class="line">--------------------------------------------- </div><div class="line">.bz2 </div><div class="line">解压1：bzip2 -d FileName.bz2 </div><div class="line">解压2：bunzip2 FileName.bz2 </div><div class="line">压缩： bzip2 -z FileName </div><div class="line">.tar.bz2 </div><div class="line">解压：tar jxvf FileName.tar.bz2 </div><div class="line">压缩：tar jcvf FileName.tar.bz2 DirName </div><div class="line">--------------------------------------------- </div><div class="line">.bz </div><div class="line">解压1：bzip2 -d FileName.bz </div><div class="line">解压2：bunzip2 FileName.bz </div><div class="line">压缩：未知 </div><div class="line">.tar.bz </div><div class="line">解压：tar jxvf FileName.tar.bz </div><div class="line">压缩：未知 </div><div class="line">--------------------------------------------- </div><div class="line">.Z </div><div class="line">解压：uncompress FileName.Z </div><div class="line">压缩：compress FileName </div><div class="line">.tar.Z </div><div class="line">解压：tar Zxvf FileName.tar.Z </div><div class="line">压缩：tar Zcvf FileName.tar.Z DirName </div><div class="line">--------------------------------------------- </div><div class="line">.tgz </div><div class="line">解压：tar zxvf FileName.tgz </div><div class="line">压缩：未知 </div><div class="line">.tar.tgz </div><div class="line">解压：tar zxvf FileName.tar.tgz </div><div class="line">压缩：tar zcvf FileName.tar.tgz FileName </div><div class="line">--------------------------------------------- </div><div class="line">.zip </div><div class="line">解压：unzip FileName.zip </div><div class="line">压缩：zip FileName.zip DirName </div><div class="line">--------------------------------------------- </div><div class="line">.rar </div><div class="line">解压：rar a FileName.rar </div><div class="line">压缩：rar e FileName.rar </div><div class="line">--------------------------------------------- </div><div class="line"></div><div class="line">后缀的含义如下：</div><div class="line">.tar打包格式：tar程序打包的数据，并没有压缩过</div><div class="line">.z格式：compress程序压缩的文件</div><div class="line">.gz压缩格式：gzip程序压缩的文件 .bz2压缩格式：bzip2程序压缩的文件</div><div class="line">.tar.gz打包压缩：tar程序打包的文件，其中并且经过 gzip 的压缩</div><div class="line">.tar.bz2打包压缩：tar程序打包的文件，其中并且经过 bzip2 的压缩</div></pre></td></tr></table></figure>
<h3 id="参数说明："><a href="#参数说明：" class="headerlink" title="参数说明："></a>参数说明：</h3><h4 id="1、主选项："><a href="#1、主选项：" class="headerlink" title="1、主选项："></a>1、主选项：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">-c 创建新的档案文件。如果用户想备份一个目录或是一些文件，就要选择这个选项。</div><div class="line">-r 把要存档的文件追加到档案文件的未尾。例如用户已经做好备份文件，又发现还有一个目录或是一些文件忘记备份了，这时可以使用该选项，将忘记的目录或文件追加到备份文件中。</div><div class="line">-t 列出档案文件的内容，查看已经备份了哪些文件。</div><div class="line">-u 更新文件。就是说，用新增的文件取代原备份文件，如果在备份文件中找不到要更新的文件，则把它追加到备份文件的最后。</div><div class="line">-x 从档案文件中释放文件。</div></pre></td></tr></table></figure>
<h4 id="说明：主选项是独立的命令，压缩解压都要用到其中一个，可以和辅助选项连用但这五个命令只能用其中一个。"><a href="#说明：主选项是独立的命令，压缩解压都要用到其中一个，可以和辅助选项连用但这五个命令只能用其中一个。" class="headerlink" title="说明：主选项是独立的命令，压缩解压都要用到其中一个，可以和辅助选项连用但这五个命令只能用其中一个。"></a>说明：主选项是独立的命令，压缩解压都要用到其中一个，可以和辅助选项连用但这五个命令只能用其中一个。</h4><h4 id="2、辅助选项："><a href="#2、辅助选项：" class="headerlink" title="2、辅助选项："></a>2、辅助选项：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">-b 该选项是为磁带机设定的，其后跟一数字，用来说明区块的大小，系统预设值为20（20×512 bytes）。</div><div class="line">-f 指定档案文件名或设备名，这个选项通常是必选的,这个参数是最后一个参数。</div><div class="line">-k 保存已经存在的文件。例如把某个文件还原，在还原的过程中遇到相同的文件，不会进行覆盖。</div><div class="line">-m 在还原文件时，把所有文件的修改时间设定为现在。</div><div class="line">-M 创建多卷的档案文件，以便在几个磁盘中存放。</div><div class="line">-v 详细报告tar处理的文件信息。如无此选项，tar不报告文件信息。</div><div class="line">-w 每一步都要求确认。</div><div class="line">-z 用gzip来压缩/解压缩文件，加上该选项后可以将档案文件进行压缩，但还原时也一定要使用该选项进行解压缩。</div></pre></td></tr></table></figure>
<h3 id="实例："><a href="#实例：" class="headerlink" title="实例："></a>实例：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">tar -cf FileName.tar DirName：这条命令是将DirName的文件夹打成一个名为FileName.tar的包。-c是表示产生新的包，-f指定包的文件名；</div><div class="line"></div><div class="line">tar -cf FileName.tar *.jpg：这条命令是将所有.jpg的文件打成一个名为FileName.tar的包；</div><div class="line"></div><div class="line">tar -rf FileName.tar *.gif：这条命令是将所有.gif的文件增加到FileName.tar的包里面去。-r是表示增加文件的意思；</div><div class="line"></div><div class="line">tar -uf FileName.tar logo.gif：这条命令是更新原来tar包FileName.tar中logo.gif文件，-u是表示更新文件的意思；</div><div class="line"></div><div class="line">tar -tf FileName.tar：这条命令是列出FileName.tar包中所有文件，-t是列出文件的意思；</div><div class="line"></div><div class="line">tar -xf FileName.tar：这条命令是解出FileName.tar包中所有文件，-x是解开的意思</div></pre></td></tr></table></figure>
<h3 id="PHP实现页面压缩包下载"><a href="#PHP实现页面压缩包下载" class="headerlink" title="PHP实现页面压缩包下载"></a>PHP实现页面压缩包下载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">function</span> back_pacp_file()</div><div class="line">&#123;</div><div class="line">    <span class="variable">$channel</span> = file_get_contents(<span class="string">'/etc/asterisk/channel.conf'</span>);</div><div class="line">    <span class="variable">$date</span> = date(<span class="string">'y-m-d'</span>,time());</div><div class="line">    <span class="variable">$pcap_file_name</span> = <span class="string">"<span class="variable">$date_</span><span class="variable">$channel</span>.tar.gz"</span>;</div><div class="line">    <span class="variable">$pcap_file_path</span> = <span class="string">"/tmp/<span class="variable">$pcap_file_name</span>"</span>;</div><div class="line"></div><div class="line">    <span class="variable">$pack_cmd</span> = <span class="string">"tar vcz -f <span class="variable">$pcap_file_path</span> /tmp/"</span>.<span class="variable">$date</span>.<span class="string">"_"</span>.<span class="variable">$channel</span>.<span class="string">".pcap"</span>;</div><div class="line"></div><div class="line">    <span class="built_in">exec</span>(<span class="string">"<span class="variable">$pack_cmd</span> &gt; /dev/null 2&gt;&amp;1 || echo $?"</span>,<span class="variable">$output</span>);</div><div class="line">    <span class="keyword">if</span>(<span class="variable">$output</span>) &#123;</div><div class="line">        <span class="built_in">echo</span> <span class="string">"&lt;/br&gt;<span class="variable">$pcap_file_name</span> "</span>;</div><div class="line">        <span class="built_in">echo</span> language(<span class="string">"Packing was failed"</span>);<span class="built_in">echo</span> <span class="string">"&lt;/br&gt;"</span>;</div><div class="line">        <span class="built_in">echo</span> language(<span class="string">"Error code"</span>);<span class="built_in">echo</span> <span class="string">": "</span>.<span class="variable">$output</span>[0];</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(!file_exists(<span class="variable">$pcap_file_path</span>)) &#123;</div><div class="line">        <span class="built_in">echo</span> <span class="string">"&lt;/br&gt;<span class="variable">$pcap_file_name</span>"</span>;</div><div class="line">        <span class="built_in">echo</span> language(<span class="string">"Can not find"</span>);</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    &#125;</div><div class="line">    //打开文件  </div><div class="line">    <span class="variable">$fd</span> = fopen (<span class="variable">$pcap_file_path</span>, <span class="string">"r"</span> ); </div><div class="line">    <span class="variable">$size</span> = filesize(<span class="variable">$pcap_file_path</span>) ;</div><div class="line">    //输入文件标签 </div><div class="line">    header(<span class="string">'Content-Encoding: none'</span>);</div><div class="line">    header(<span class="string">'Content-Type: application/force-download'</span>);</div><div class="line">    header(<span class="string">'Content-Type: application/octet-stream'</span>);</div><div class="line">    header(<span class="string">'Content-Type: application/download'</span>);</div><div class="line">    header(<span class="string">'Content-Description: File Transfer'</span>);  </div><div class="line">    header(<span class="string">'Accept-Ranges: bytes'</span>);  </div><div class="line">    header(<span class="string">"Accept-Length: <span class="variable">$size</span>"</span>);  </div><div class="line">    header(<span class="string">'Content-Transfer-Encoding: binary'</span> );</div><div class="line">    header(<span class="string">"Content-Disposition: attachment; filename=<span class="variable">$pcap_file_name</span>"</span> ); </div><div class="line">    header(<span class="string">'Pragma: no-cache'</span>);</div><div class="line">    header(<span class="string">'Expires: 0'</span>);</div><div class="line"></div><div class="line">    //输出文件内容   </div><div class="line">    ob_clean(); //清除输出缓存内容，如果没有的话下载的文件或者压缩包可能是空的</div><div class="line">    flush();    //刷新系统输出缓存</div><div class="line">    <span class="built_in">echo</span> fread(<span class="variable">$fd</span>, <span class="variable">$size</span>);  //读取文件内容并直接输出到浏览器</div><div class="line">    fclose (<span class="variable">$fd</span>);</div><div class="line">    unlink(<span class="variable">$pcap_file_path</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;工作过程中需要将x86设备上的某个文件夹进行打包，然后实现页面下载压缩包的需求。由于工作机上面不支持ZIP工具压缩，于是采用PHP代码嵌入linux tar打包命令实现。&lt;br&gt;PHP代码：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$dir_path&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&#39;/disk/report_pdf/&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;cd &#39;&lt;/span&gt;.&lt;span class=&quot;variable&quot;&gt;$dir_path&lt;/span&gt;.&lt;span class=&quot;string&quot;&gt;&#39; &amp;amp;&amp;amp; tar -zcvf report.tar.gz -C /disk/report_pdf .&#39;&lt;/span&gt;); &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// -C参数是解决打包之后带有文件路径的问题，记住最后一定要加 . 。&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux,PHP" scheme="http://weibo.com/categories/Linux-PHP/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP获取今日/昨日/上周/本月的起始时间戳和结束时间戳的方法</title>
    <link href="http://weibo.com/2018/08/21/PHP%E8%8E%B7%E5%8F%96%E4%BB%8A%E6%97%A5-%E6%98%A8%E6%97%A5-%E4%B8%8A%E5%91%A8-%E6%9C%AC%E6%9C%88%E7%9A%84%E8%B5%B7%E5%A7%8B%E6%97%B6%E9%97%B4%E6%88%B3%E5%92%8C%E7%BB%93%E6%9D%9F%E6%97%B6%E9%97%B4%E6%88%B3%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://weibo.com/2018/08/21/PHP获取今日-昨日-上周-本月的起始时间戳和结束时间戳的方法/</id>
    <published>2018-08-21T11:50:09.000Z</published>
    <updated>2018-12-14T09:52:35.655Z</updated>
    
    <content type="html"><![CDATA[<p>php 获取今日、昨日、上周、本月的起始时间戳和结束时间戳的方法，主要使用到了 php 的时间函数 mktime。<br><a id="more"></a></p>
<h2 id="php获取今日开始时间戳和结束时间戳"><a href="#php获取今日开始时间戳和结束时间戳" class="headerlink" title="php获取今日开始时间戳和结束时间戳"></a>php获取今日开始时间戳和结束时间戳</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$beginToday</span> = mktime(0,0,0,date(<span class="string">'m'</span>),date(<span class="string">'d'</span>),date(<span class="string">'Y'</span>));</div><div class="line"><span class="variable">$endToday</span> = mktime(0,0,0,date(<span class="string">'m'</span>),date(<span class="string">'d'</span>)+1,date(<span class="string">'Y'</span>))-1;</div></pre></td></tr></table></figure>
<h2 id="php获取昨日开始时间戳和结束时间戳"><a href="#php获取昨日开始时间戳和结束时间戳" class="headerlink" title="php获取昨日开始时间戳和结束时间戳"></a>php获取昨日开始时间戳和结束时间戳</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$beginYesterday</span> = mktime(0,0,0,date(<span class="string">'m'</span>),date(<span class="string">'d'</span>)-1,date(<span class="string">'Y'</span>));</div><div class="line"><span class="variable">$endYesterday</span> = mktime(0,0,0,date(<span class="string">'m'</span>),date(<span class="string">'d'</span>),date(<span class="string">'Y'</span>))-1;</div></pre></td></tr></table></figure>
<h2 id="php获取上周起始时间戳和结束时间戳"><a href="#php获取上周起始时间戳和结束时间戳" class="headerlink" title="php获取上周起始时间戳和结束时间戳"></a>php获取上周起始时间戳和结束时间戳</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$beginLastweek</span>=mktime(0,0,0,date(<span class="string">'m'</span>),date(<span class="string">'d'</span>)-date(<span class="string">'w'</span>)+1-7,date(<span class="string">'Y'</span>));</div><div class="line">// date(<span class="string">"Y-m-d H:i:s"</span>,mktime(0, 0 , 0,date(<span class="string">"m"</span>),date(<span class="string">"d"</span>)-date(<span class="string">"w"</span>)+1-7,date(<span class="string">"Y"</span>)));</div><div class="line"><span class="variable">$endLastweek</span>=mktime(23,59,59,date(<span class="string">'m'</span>),date(<span class="string">'d'</span>)-date(<span class="string">'w'</span>)+7-7,date(<span class="string">'Y'</span>));</div><div class="line">// date(<span class="string">"Y-m-d H:i:s"</span>,mktime(23,59,59,date(<span class="string">"m"</span>),date(<span class="string">"d"</span>)-date(<span class="string">"w"</span>)+7-7,date(<span class="string">"Y"</span>)));</div></pre></td></tr></table></figure>
<h2 id="php获取本月起始时间戳和结束时间戳"><a href="#php获取本月起始时间戳和结束时间戳" class="headerlink" title="php获取本月起始时间戳和结束时间戳"></a>php获取本月起始时间戳和结束时间戳</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$beginThismonth</span>=mktime(0,0,0,date(<span class="string">'m'</span>),1,date(<span class="string">'Y'</span>));</div><div class="line"><span class="variable">$endThismonth</span>=mktime(23,59,59,date(<span class="string">'m'</span>),date(<span class="string">'t'</span>),date(<span class="string">'Y'</span>));</div></pre></td></tr></table></figure>
<h2 id="PHP-mktime-函数用于返回一个日期的-Unix-时间戳。"><a href="#PHP-mktime-函数用于返回一个日期的-Unix-时间戳。" class="headerlink" title="PHP mktime() 函数用于返回一个日期的 Unix 时间戳。"></a>PHP mktime() 函数用于返回一个日期的 Unix 时间戳。</h2><p>语法:<br>mktime(hour,minute,second,month,day,year,is_dst)</p>
<h2 id="获取今天00-00"><a href="#获取今天00-00" class="headerlink" title="获取今天00:00"></a>获取今天00:00</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$todaystart</span> = strtotime(date(<span class="string">'Y-m-d'</span>.<span class="string">'00:00:00'</span>,time()));</div></pre></td></tr></table></figure>
<h2 id="获取今天24-00"><a href="#获取今天24-00" class="headerlink" title="获取今天24:00"></a>获取今天24:00</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$todayend</span> = strtotime(date(<span class="string">'Y-m-d'</span>.<span class="string">'00:00:00'</span>,time()+3600*24));</div></pre></td></tr></table></figure>
<h2 id="统计今天注册的用户"><a href="#统计今天注册的用户" class="headerlink" title="统计今天注册的用户"></a>统计今天注册的用户</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$todayuser</span>[<span class="string">'create_time'</span>] = array(between,<span class="string">"<span class="variable">$todaystart</span>,<span class="variable">$todayend</span>"</span>);</div><div class="line"><span class="variable">$todaysum</span> = <span class="variable">$Users</span>-&gt;<span class="built_in">where</span>(<span class="variable">$todayuser</span>)-&gt;count();</div></pre></td></tr></table></figure>
<h2 id="获取昨天00-00"><a href="#获取昨天00-00" class="headerlink" title="获取昨天00:00"></a>获取昨天00:00</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$timestart</span> = strtotime(date(<span class="string">'Y-m-d'</span>.<span class="string">'00:00:00'</span>,time()-3600*24));</div></pre></td></tr></table></figure>
<h2 id="获取今天00-00-1"><a href="#获取今天00-00-1" class="headerlink" title="获取今天00:00"></a>获取今天00:00</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$timeend</span> = strtotime(date(<span class="string">'Y-m-d'</span>.<span class="string">'00:00:00'</span>,time()));</div></pre></td></tr></table></figure>
<h2 id="统计昨天注册的用户"><a href="#统计昨天注册的用户" class="headerlink" title="统计昨天注册的用户"></a>统计昨天注册的用户</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$map</span>[<span class="string">'create_time'</span>] = array(between,<span class="string">"<span class="variable">$timestart</span>,<span class="variable">$timeend</span>"</span>);</div><div class="line"><span class="variable">$daycount</span> = <span class="variable">$Users</span>-&gt;<span class="built_in">where</span>(<span class="variable">$map</span>)-&gt;count();</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$this</span>-&gt;assign(<span class="string">"todaysum"</span>,<span class="variable">$todaysum</span>);</div><div class="line"><span class="variable">$this</span>-&gt;assign(<span class="string">"daycount"</span>,<span class="variable">$daycount</span>);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;php 获取今日、昨日、上周、本月的起始时间戳和结束时间戳的方法，主要使用到了 php 的时间函数 mktime。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://weibo.com/categories/PHP/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux下开启SSH</title>
    <link href="http://weibo.com/2018/08/03/Linux%E4%B8%8B%E5%BC%80%E5%90%AFSSH/"/>
    <id>http://weibo.com/2018/08/03/Linux下开启SSH/</id>
    <published>2018-08-03T10:24:28.000Z</published>
    <updated>2018-12-14T09:52:18.946Z</updated>
    
    <content type="html"><![CDATA[<p>发现PhpStorm通过sftp上传文件的时候一直上传失败，后来发现是因为ssh不允许root用户远程登录。</p>
<h2 id="1、允许root用户远程登录"><a href="#1、允许root用户远程登录" class="headerlink" title="1、允许root用户远程登录"></a>1、允许root用户远程登录</h2><p>修改ssh服务配置文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vi /etc/ssh/sshd_config</div></pre></td></tr></table></figure></p>
<p>调整PermitRootLogin参数值为yes</p>
<h2 id="2、允许无密码登录"><a href="#2、允许无密码登录" class="headerlink" title="2、允许无密码登录"></a>2、允许无密码登录</h2><p>同上，修改ssh服务配置文件，两种情况：<br>1） 将PermitEmptyPasswords yes前面的#号去掉<br>2） 将PermitEmptyPasswords 参数值修改为yes</p>
<h2 id="以上两种配置，均需要重启ssh服务"><a href="#以上两种配置，均需要重启ssh服务" class="headerlink" title="以上两种配置，均需要重启ssh服务"></a>以上两种配置，均需要重启ssh服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">service sshd restart  //或者</div><div class="line">/etc/init.d/ssh restart //或者</div><div class="line">/etc/init.d/sshd restart</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;发现PhpStorm通过sftp上传文件的时候一直上传失败，后来发现是因为ssh不允许root用户远程登录。&lt;/p&gt;
&lt;h2 id=&quot;1、允许root用户远程登录&quot;&gt;&lt;a href=&quot;#1、允许root用户远程登录&quot; class=&quot;headerlink&quot; title=&quot;1、
    
    </summary>
    
      <category term="Linux" scheme="http://weibo.com/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>KVM虚拟化调整虚拟内存和CPU大小</title>
    <link href="http://weibo.com/2018/07/11/KVM%E8%99%9A%E6%8B%9F%E5%8C%96%E8%B0%83%E6%95%B4%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%E5%92%8CCPU%E5%A4%A7%E5%B0%8F/"/>
    <id>http://weibo.com/2018/07/11/KVM虚拟化调整虚拟内存和CPU大小/</id>
    <published>2018-07-11T08:41:34.000Z</published>
    <updated>2018-12-14T09:54:00.044Z</updated>
    
    <content type="html"><![CDATA[<p>这篇本来应该上周五就写的，但是家里有事，今天补上。<br>周五开发的时候发现之前装的虚拟机，系统一跑起来dplane就挂了，然后排查原因，是因为装虚拟机的时候分配的内存不够用，于是想要使用KVM进行虚拟内存的调整，将内存从1Gb调整到2Gb，后来系统顺利跑起来了。<br>以下内容是总结之后的内容，包含工作需要以外的拓展内容：<br><a id="more"></a></p>
<h2 id="一、调小虚拟机内存"><a href="#一、调小虚拟机内存" class="headerlink" title="一、调小虚拟机内存"></a>一、调小虚拟机内存</h2><p>1、查看虚拟机内存大小,V1为我的虚拟机名称<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">root@zhy:~<span class="comment"># virsh dominfo V1 | grep memory</span></div><div class="line">Max memory:     1048432 KiB</div><div class="line">Used memory:    1048432 KiB</div></pre></td></tr></table></figure></p>
<p>2.设置虚拟机内存大小为512MB<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">root@zhy:~<span class="comment">## virsh setmem V1 524288</span></div></pre></td></tr></table></figure></p>
<p>3.再次查看当前内存大小<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">root@zhy:~<span class="comment"># virsh dominfo V1 | grep memory</span></div><div class="line">Max memory:     1048432 KiB</div><div class="line">Used memory:    524288 KiB</div></pre></td></tr></table></figure></p>
<h2 id="二、增大虚拟机内存、增加虚拟机CPU个数"><a href="#二、增大虚拟机内存、增加虚拟机CPU个数" class="headerlink" title="二、增大虚拟机内存、增加虚拟机CPU个数"></a>二、增大虚拟机内存、增加虚拟机CPU个数</h2><h3 id="增大虚拟机内存、增加虚拟机CPU个数需要首先关机虚拟机"><a href="#增大虚拟机内存、增加虚拟机CPU个数需要首先关机虚拟机" class="headerlink" title="增大虚拟机内存、增加虚拟机CPU个数需要首先关机虚拟机"></a>增大虚拟机内存、增加虚拟机CPU个数需要首先关机虚拟机</h3><p>1.关闭虚拟机<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">virsh shutdown V1</div></pre></td></tr></table></figure></p>
<p>2.编辑虚拟机配置文件<br>修改内存大小、vcpu个数<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">virsh edit V1</div><div class="line">......</div><div class="line">  &lt;memory unit=<span class="string">'KiB'</span>&gt;2146304&lt;/memory&gt;</div><div class="line">  &lt;currentMemory unit=<span class="string">'KiB'</span>&gt;2146304&lt;/currentMemory&gt;</div><div class="line">  &lt;vcpu placement=<span class="string">'static'</span>&gt;2&lt;/vcpu&gt;</div><div class="line">......</div></pre></td></tr></table></figure></p>
<p>3.从配置文件启动虚拟机<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">virsh create /etc/libvirt/qemu/V1.xml</div></pre></td></tr></table></figure></p>
<p>4.查看当前内存大小<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">root@zhy:~<span class="comment"># virsh dominfo V1 | grep memory</span></div><div class="line">Max memory:     2146304 KiB</div><div class="line">Used memory:    524288 KiB</div></pre></td></tr></table></figure></p>
<p>5.设置虚拟机内存大小为2G<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">root@zhy:~<span class="comment"># virsh setmem V1 2146304</span></div></pre></td></tr></table></figure></p>
<p>6.验证<br>查看当前内存大小<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">root@zhy:~<span class="comment"># virsh dominfo V1 | grep memory</span></div><div class="line">Max memory:     2146304 KiB</div><div class="line">Used memory:    2146304 KiB</div></pre></td></tr></table></figure></p>
<p>查看当前CPU个数<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">root@zhy:~<span class="comment"># virsh dominfo V1 | grep CPU</span></div><div class="line">CPU(s):         2</div><div class="line">CPU time:       15.0s</div></pre></td></tr></table></figure></p>
<h2 id="三、命令详单"><a href="#三、命令详单" class="headerlink" title="三、命令详单"></a>三、命令详单</h2><h3 id="root-zhy-virsh"><a href="#root-zhy-virsh" class="headerlink" title="root@zhy:~# virsh"></a>root@zhy:~# virsh</h3><p>virsh # help    打印帮助<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div></pre></td><td class="code"><pre><div class="line">attach-device   从一个XML文件附加装置</div><div class="line">attach-disk     附加磁盘设备</div><div class="line">attach-interface 获得网络界面</div><div class="line">autostart       自动开始一个域</div><div class="line">capabilities    性能</div><div class="line"><span class="built_in">cd</span>              change the current directory</div><div class="line">connect         连接（重新连接）到 hypervisor</div><div class="line">console         连接到客户会话</div><div class="line">cpu-baseline    compute baseline CPU</div><div class="line">cpu-compare     compare host CPU with a CPU described by an XML file</div><div class="line">create          从一个 XML 文件创建一个域</div><div class="line">start           开始一个（以前定义的）非活跃的域</div><div class="line">destroy         删除一个域</div><div class="line">detach-device   从一个 XML 文件分离设备</div><div class="line">detach-disk     分离磁盘设备</div><div class="line">detach-interface 分离网络界面</div><div class="line">define          从一个 XML 文件定义（但不开始）一个域</div><div class="line">domid           把一个域名或 UUID 转换为域 id</div><div class="line">domuuid         把一个域名或 id 转换为域 UUID</div><div class="line">dominfo         域信息</div><div class="line">domjobinfo      domain job information</div><div class="line">domjobabort     abort active domain job</div><div class="line">domname         将域 id 或 UUID 转换为域名</div><div class="line">domstate        域状态</div><div class="line">domblkstat      获得域设备块状态</div><div class="line">domifstat       获得域网络接口状态</div><div class="line">dommemstat      get memory statistics <span class="keyword">for</span> a domain</div><div class="line">domblkinfo      domain block device size information</div><div class="line">domxml-from-native Convert native config to domain XML</div><div class="line">domxml-to-native Convert domain XML to native config</div><div class="line">dumpxml         XML 中的域信息</div><div class="line">edit            编辑某个域的 XML 配置</div><div class="line">find-storage-pool-sources 发现潜在存储池源</div><div class="line">find-storage-pool-sources-as 找到潜在存储池源</div><div class="line">freecell        NUMA可用内存</div><div class="line">hostname        打印管理程序主机名</div><div class="line">list            列出域</div><div class="line">migrate         将域迁移到另一个主机中</div><div class="line">migrate-setmaxdowntime <span class="built_in">set</span> maximum tolerable downtime</div><div class="line">net-autostart   自动开始网络</div><div class="line">net-create      从一个 XML 文件创建一个网络</div><div class="line">net-define      从一个 XML 文件定义(但不开始)一个网络</div><div class="line">net-destroy     删除一个网络</div><div class="line">net-dumpxml     XML 中的网络信息</div><div class="line">net-edit        为网络编辑 XML 配置</div><div class="line">net-list        列出网络</div><div class="line">net-name        把一个网络UUID 转换为网络名</div><div class="line">net-start       开始一个(以前定义的)不活跃的网络</div><div class="line">net-undefine    取消定义一个非活跃的网络</div><div class="line">net-uuid        把一个网络名转换为网络UUID</div><div class="line">iface-list      list physical host interfaces</div><div class="line">iface-name      convert an interface MAC address to interface name</div><div class="line">iface-mac       convert an interface name to interface MAC address</div><div class="line">iface-dumpxml   interface information <span class="keyword">in</span> XML</div><div class="line">iface-define    define (but don<span class="string">'t start) a physical host interface from an XML file</span></div><div class="line"><span class="string">iface-undefine  undefine a physical host interface (remove it from configuration)</span></div><div class="line"><span class="string">iface-edit      edit XML configuration for a physical host interface</span></div><div class="line"><span class="string">iface-start     start a physical host interface (enable it / "if-up")</span></div><div class="line"><span class="string">iface-destroy   destroy a physical host interface (disable it / "if-down")</span></div><div class="line"><span class="string">managedsave     managed save of a domain state</span></div><div class="line"><span class="string">nodeinfo        节点信息</span></div><div class="line"><span class="string">nodedev-list    这台主机中中的枚举设备</span></div><div class="line"><span class="string">nodedev-dumpxml XML 中的节点设备详情</span></div><div class="line"><span class="string">nodedev-dettach dettach node device from its device driver</span></div><div class="line"><span class="string">nodedev-reattach reattach node device to its device driver</span></div><div class="line"><span class="string">nodedev-reset   重置节点设备</span></div><div class="line"><span class="string">nodedev-create  create a device defined by an XML file on the node</span></div><div class="line"><span class="string">nodedev-destroy destroy a device on the node</span></div><div class="line"><span class="string">nwfilter-define define or update a network filter from an XML file</span></div><div class="line"><span class="string">nwfilter-undefine undefine a network filter</span></div><div class="line"><span class="string">nwfilter-dumpxml network filter information in XML</span></div><div class="line"><span class="string">nwfilter-list   list network filters</span></div><div class="line"><span class="string">nwfilter-edit   edit XML configuration for a network filter</span></div><div class="line"><span class="string">pool-autostart  自动启动某个池</span></div><div class="line"><span class="string">pool-build      建立池</span></div><div class="line"><span class="string">pool-create     从一个 XML 文件中创建一个池</span></div><div class="line"><span class="string">pool-create-as  从一组变量中创建一个池</span></div><div class="line"><span class="string">pool-define     在一个 XML 文件中定义（但不启动）一个池</span></div><div class="line"><span class="string">pool-define-as  在一组变量中定义池</span></div><div class="line"><span class="string">pool-destroy    销毁池</span></div><div class="line"><span class="string">pool-delete     删除池</span></div><div class="line"><span class="string">pool-dumpxml    XML 中的池信息</span></div><div class="line"><span class="string">pool-edit       为存储池编辑 XML 配置</span></div><div class="line"><span class="string">pool-info       存储池信息</span></div><div class="line"><span class="string">pool-list       列出池</span></div><div class="line"><span class="string">pool-name       将池 UUID 转换为池名称</span></div><div class="line"><span class="string">pool-refresh    刷新池</span></div><div class="line"><span class="string">pool-start      启动一个（以前定义的）非活跃的池</span></div><div class="line"><span class="string">pool-undefine   取消定义一个不活跃的池</span></div><div class="line"><span class="string">pool-uuid       把一个池名称转换为池 UUID</span></div><div class="line"><span class="string">secret-define   define or modify a secret from an XML file</span></div><div class="line"><span class="string">secret-dumpxml  secret attributes in XML</span></div><div class="line"><span class="string">secret-set-value set a secret value</span></div><div class="line"><span class="string">secret-get-value Output a secret value</span></div><div class="line"><span class="string">secret-undefine undefine a secret</span></div><div class="line"><span class="string">secret-list     list secrets</span></div><div class="line"><span class="string">pwd             print the current directory</span></div><div class="line"><span class="string">quit            退出这个非交互式终端</span></div><div class="line"><span class="string">exit            退出这个非交互式终端</span></div><div class="line"><span class="string">reboot          重新启动一个域</span></div><div class="line"><span class="string">restore         从一个存在一个文件中的状态恢复一个域</span></div><div class="line"><span class="string">resume          重新恢复一个域</span></div><div class="line"><span class="string">save            把一个域的状态保存到一个文件</span></div><div class="line"><span class="string">schedinfo       显示/设置日程安排变量</span></div><div class="line"><span class="string">dump            把一个域的内核 dump 到一个文件中以方便分析</span></div><div class="line"><span class="string">shutdown        关闭一个域</span></div><div class="line"><span class="string">setmem          改变内存的分配</span></div><div class="line"><span class="string">setmaxmem       改变最大内存限制值</span></div><div class="line"><span class="string">setvcpus        改变虚拟 CPU 的号</span></div><div class="line"><span class="string">suspend         挂起一个域</span></div><div class="line"><span class="string">ttyconsole      tty 控制台</span></div><div class="line"><span class="string">undefine        取消定义一个非活跃的域</span></div><div class="line"><span class="string">update-device   update device from an XML file</span></div><div class="line"><span class="string">uri             打印管理程序典型的URI</span></div><div class="line"><span class="string">vol-create      从一个 XML 文件创建一个卷</span></div><div class="line"><span class="string">vol-create-from create a vol, using another volume as input</span></div><div class="line"><span class="string">vol-create-as   从一组变量中创建卷</span></div><div class="line"><span class="string">vol-clone       clone a volume.</span></div><div class="line"><span class="string">vol-delete      删除卷</span></div><div class="line"><span class="string">vol-wipe        wipe a vol</span></div><div class="line"><span class="string">vol-dumpxml     XML 中的卷信息</span></div><div class="line"><span class="string">vol-info        存储卷信息</span></div><div class="line"><span class="string">vol-list        列出卷</span></div><div class="line"><span class="string">vol-pool        returns the storage pool for a given volume key or path</span></div><div class="line"><span class="string">vol-path        returns the volume path for a given volume name or key</span></div><div class="line"><span class="string">vol-name        returns the volume name for a given volume key or path</span></div><div class="line"><span class="string">vol-key         returns the volume key for a given volume name or path</span></div><div class="line"><span class="string">vcpuinfo        域 vcpu 的信息</span></div><div class="line"><span class="string">vcpupin         控制域 vcpu affinity</span></div><div class="line"><span class="string">version         显示版本</span></div><div class="line"><span class="string">vncdisplay      vnc 显示</span></div><div class="line"><span class="string">snapshot-create Create a snapshot</span></div><div class="line"><span class="string">snapshot-current Get the current snapshot</span></div><div class="line"><span class="string">snapshot-delete Delete a domain snapshot</span></div><div class="line"><span class="string">snapshot-dumpxml Dump XML for a domain snapshot</span></div><div class="line"><span class="string">snapshot-list   List snapshots for a domain</span></div><div class="line"><span class="string">snapshot-revert Revert a domain to a snapshot</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇本来应该上周五就写的，但是家里有事，今天补上。&lt;br&gt;周五开发的时候发现之前装的虚拟机，系统一跑起来dplane就挂了，然后排查原因，是因为装虚拟机的时候分配的内存不够用，于是想要使用KVM进行虚拟内存的调整，将内存从1Gb调整到2Gb，后来系统顺利跑起来了。&lt;br&gt;以下内容是总结之后的内容，包含工作需要以外的拓展内容：&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux, KVM" scheme="http://weibo.com/categories/Linux-KVM/"/>
    
    
  </entry>
  
  <entry>
    <title>开启/关闭ubuntu防火墙</title>
    <link href="http://weibo.com/2018/07/10/%E5%BC%80%E5%90%AF-%E5%85%B3%E9%97%ADubuntu%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    <id>http://weibo.com/2018/07/10/开启-关闭ubuntu防火墙/</id>
    <published>2018-07-10T03:46:21.000Z</published>
    <updated>2018-12-14T09:51:55.413Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装防火墙"><a href="#安装防火墙" class="headerlink" title="安装防火墙"></a>安装防火墙</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install ufw</div></pre></td></tr></table></figure>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="1、启用"><a href="#1、启用" class="headerlink" title="1、启用"></a>1、启用</h3><p>sudo ufw enable<br>sudo ufw default deny<br>作用：开启了防火墙并随系统启动同时关闭所有外部对本机的访问（本机访问外部正常）。</p>
<h3 id="2、关闭"><a href="#2、关闭" class="headerlink" title="2、关闭"></a>2、关闭</h3><p>sudo ufw disable </p>
<h3 id="3、查看防火墙状态"><a href="#3、查看防火墙状态" class="headerlink" title="3、查看防火墙状态"></a>3、查看防火墙状态</h3><p>sudo ufw status </p>
<h3 id="4、开启-禁用相应端口或服务举例"><a href="#4、开启-禁用相应端口或服务举例" class="headerlink" title="4、开启/禁用相应端口或服务举例"></a>4、开启/禁用相应端口或服务举例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">sudo ufw allow 80 允许外部访问80端口</div><div class="line">sudo ufw delete allow 80 禁止外部访问80 端口</div><div class="line">sudo ufw allow from 192.168.1.1 允许此IP访问所有的本机端口</div><div class="line">sudo ufw deny smtp 禁止外部访问smtp服务</div><div class="line">sudo ufw delete allow smtp 删除上面建立的某条规则</div><div class="line">sudo ufw deny proto tcp from 10.0.0.0/8 to 192.168.0.1 port 22 要拒绝所有的TCP流量从10.0.0.0/8 到192.168.0.1地址的22端口</div><div class="line"> </div><div class="line">可以允许所有RFC1918网络（局域网/无线局域网的）访问这个主机（/8,/16,/12是一种网络分级）：</div><div class="line">sudo ufw allow from 10.0.0.0/8</div><div class="line">sudo ufw allow from 172.16.0.0/12</div><div class="line">sudo ufw allow from 192.168.0.0/16</div></pre></td></tr></table></figure>
<p>推荐设置<br>sudo apt-get install ufw<br>sudo ufw enable<br>sudo ufw default deny </p>
<p>这样设置已经很安全，如果有特殊需要，可以使用sudo ufw allow开启相应服务。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装防火墙&quot;&gt;&lt;a href=&quot;#安装防火墙&quot; class=&quot;headerlink&quot; title=&quot;安装防火墙&quot;&gt;&lt;/a&gt;安装防火墙&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://weibo.com/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Ubuntu14.04使用qemu创建虚拟机并配置桥接网络</title>
    <link href="http://weibo.com/2018/07/06/Ubuntu14-04%E4%BD%BF%E7%94%A8qemu%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%A1%A5%E6%8E%A5%E7%BD%91%E7%BB%9C/"/>
    <id>http://weibo.com/2018/07/06/Ubuntu14-04使用qemu创建虚拟机并配置桥接网络/</id>
    <published>2018-07-06T03:05:40.000Z</published>
    <updated>2018-12-14T09:51:36.667Z</updated>
    
    <content type="html"><![CDATA[<p>需要在宿主机中为虚拟机创建一个</p>
<h5 id="tap虚拟网络接口，"><a href="#tap虚拟网络接口，" class="headerlink" title="tap虚拟网络接口，"></a>tap虚拟网络接口，</h5><p>并创建一个</p>
<h5 id="虚拟网桥br0，"><a href="#虚拟网桥br0，" class="headerlink" title="虚拟网桥br0，"></a>虚拟网桥br0，</h5><p>并将tap和br0桥接起来就可以实现虚拟机的网络了。<br><a id="more"></a><br>配置的步骤：</p>
<h2 id="一、安装两个配置网络所需软件包"><a href="#一、安装两个配置网络所需软件包" class="headerlink" title="一、安装两个配置网络所需软件包"></a>一、安装两个配置网络所需软件包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># apt-get install bridge-utils        // 虚拟网桥工具</span></div><div class="line"><span class="comment"># apt-get install uml-utilities       // UML（User-mode linux）工具</span></div></pre></td></tr></table></figure>
<h2 id="二、配置虚拟网桥br0"><a href="#二、配置虚拟网桥br0" class="headerlink" title="二、配置虚拟网桥br0"></a>二、配置虚拟网桥br0</h2><p>修改网络配置文件 vi /etc/network/interfaces<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">auto lo</div><div class="line">iface lo inet loopback</div><div class="line"></div><div class="line">auto br0</div><div class="line">iface br0 inet static</div><div class="line">        bridge_ports eth0</div><div class="line">address 192.168.199.186</div><div class="line">netmask 255.255.255.0</div><div class="line">gateway 192.168.199.1</div><div class="line">dns-nameserver 8.8.8.8</div><div class="line">bridge_fd 9</div><div class="line">bridge_hello 2</div><div class="line">bridge_maxage 12</div><div class="line">bridge_stp off</div><div class="line"></div><div class="line">auto eth0</div><div class="line">iface eth0 inet static</div><div class="line">address 192.168.199.186</div><div class="line">netmask 255.255.255.0</div><div class="line">gateway 192.168.199.1</div><div class="line">dns-nameserver 8.8.8.8</div></pre></td></tr></table></figure></p>
<p>在适当的位置填上你的环境对应的参数。<br>配置完成之后一定要重启，不然看不到创建的虚拟网桥。</p>
<h2 id="三、手动配置TAP设备的操作"><a href="#三、手动配置TAP设备的操作" class="headerlink" title="三、手动配置TAP设备的操作"></a>三、手动配置TAP设备的操作</h2><p>(最下面有通过interfaces文件在服务器启动时自动配置TAP的步骤)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">tunctl -t tap0 -u root              // 创建一个tap0接口，只允许root用户访问</div><div class="line">brctl addif br0 tap0                // 在虚拟网桥中增加一个tap0接口</div><div class="line">ifconfig tap0 0.0.0.0 promisc up    // 打开tap0接口</div><div class="line">brctl showstp br0                   // 显示br0的各个接口</div></pre></td></tr></table></figure></p>
<h2 id="四、启动虚拟机"><a href="#四、启动虚拟机" class="headerlink" title="四、启动虚拟机"></a>四、启动虚拟机</h2><h2 id="五、修改虚拟机的网络配置文件"><a href="#五、修改虚拟机的网络配置文件" class="headerlink" title="五、修改虚拟机的网络配置文件"></a>五、修改虚拟机的网络配置文件</h2><p>vi /etc/network/interfaces<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">auto lo</div><div class="line">iface lo inet loopback</div><div class="line"></div><div class="line">auto eth0</div><div class="line">iface eth0 inet static</div><div class="line">address 192.168.199.187</div><div class="line">netmask 255.255.255.0</div><div class="line">gateway 192.168.199.1</div><div class="line">bridge_fp 9</div><div class="line">bridge_hello 2</div><div class="line">bridge_maxage 12</div><div class="line">bridge_stp off</div><div class="line">dns-nameserver 8.8.8.8</div></pre></td></tr></table></figure></p>
<p>修改完成之后ifdown eth0 &amp;&amp; ifup eth0 或者重启虚拟机</p>
<h2 id="六、为了在系统启动时能够自动配置虚拟网桥和TAP设备，编写"><a href="#六、为了在系统启动时能够自动配置虚拟网桥和TAP设备，编写" class="headerlink" title="六、为了在系统启动时能够自动配置虚拟网桥和TAP设备，编写"></a>六、为了在系统启动时能够自动配置虚拟网桥和TAP设备，编写</h2><p>vi /etc/network/interfaces<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">auto lo</div><div class="line">iface lo inet loopback</div><div class="line"><span class="comment"># auto eth0 //eth0网卡的配置要注释掉</span></div><div class="line"><span class="comment"># iface eth0 inet manual</span></div><div class="line">auto br0</div><div class="line">iface br0 inet static</div><div class="line">        bridge_ports eth0</div><div class="line">address 192.168.199.186</div><div class="line">netmask 255.255.255.0</div><div class="line">gateway 192.168.199.1</div><div class="line">bridge_fd 9</div><div class="line">bridge_hello 2</div><div class="line">bridge_maxage 12</div><div class="line">bridge_stp off</div><div class="line">dns-nameservers 8.8.8.8 114.114.114.114</div><div class="line">auto tap0</div><div class="line">iface tap0 inet manual</div><div class="line">pre-up tunctl -t tap0 -u root</div><div class="line">pre-up ifconfig tap0 0.0.0.0 promisc up</div><div class="line">post-up brctl addif br0 tap0</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;需要在宿主机中为虚拟机创建一个&lt;/p&gt;
&lt;h5 id=&quot;tap虚拟网络接口，&quot;&gt;&lt;a href=&quot;#tap虚拟网络接口，&quot; class=&quot;headerlink&quot; title=&quot;tap虚拟网络接口，&quot;&gt;&lt;/a&gt;tap虚拟网络接口，&lt;/h5&gt;&lt;p&gt;并创建一个&lt;/p&gt;
&lt;h5 id=&quot;虚拟网桥br0，&quot;&gt;&lt;a href=&quot;#虚拟网桥br0，&quot; class=&quot;headerlink&quot; title=&quot;虚拟网桥br0，&quot;&gt;&lt;/a&gt;虚拟网桥br0，&lt;/h5&gt;&lt;p&gt;并将tap和br0桥接起来就可以实现虚拟机的网络了。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://weibo.com/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>在Ubuntu中安装和使用kvm</title>
    <link href="http://weibo.com/2018/07/05/%E5%9C%A8Ubuntu%E4%B8%AD%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8kvm/"/>
    <id>http://weibo.com/2018/07/05/在Ubuntu中安装和使用kvm/</id>
    <published>2018-07-05T04:43:30.000Z</published>
    <updated>2018-12-14T09:53:14.544Z</updated>
    
    <content type="html"><![CDATA[<p>首先解决设备不能上网的问题：<br>手动设置静态IP<br>1、vim /etc/network/interfaces</p>
<p>2、修改文件内容<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">auto lo</div><div class="line">iface lo inet loopback</div><div class="line"></div><div class="line">auto eth0</div><div class="line">iface eth0 inet static</div><div class="line">address 192.168.199.186</div><div class="line">netmask 255.255.255.0</div><div class="line">gateway 192.168.199.1</div><div class="line">dns-nameserver 8.8.8.8</div></pre></td></tr></table></figure></p>
<p>3、配置DNS解析器<br>vim /etc/reslov.conf，输入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">nameserver 8.8.8.8  //(8.8.8.8谷歌的DNS解析器，可能比较慢)</div><div class="line">nameserver 114.114.114.114  //(国内的DNS解析器)</div></pre></td></tr></table></figure></p>
<p>但是Ubuntu Server 中resolv.conf重启时会被覆盖，解决方法如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">1.需要创建一个文件/etc/resolvconf/resolv.conf.d/tail</div><div class="line">sudo vi /etc/resolvconf/resolv.conf.d/tail</div><div class="line"></div><div class="line">2.在该文件中写入自己需要的dns服务器，格式与/etc/resolv.conf相同</div><div class="line">nameserver 8.8.8.8  </div><div class="line"></div><div class="line">3.重启下resolvconf程序</div><div class="line">sudo /etc/init.d/resolvconf restart </div><div class="line"></div><div class="line">再去看看/etc/resolv.conf文件,可以看到自己添加的dns服务器已经加到该文件中</div></pre></td></tr></table></figure></p>
<p>4、重启网络sudo /etc/init.d/networking restart<br>   重启网卡还有以下几种方法：</p>
<a id="more"></a>
<h2 id="Linux重启网卡的三种方法"><a href="#Linux重启网卡的三种方法" class="headerlink" title="Linux重启网卡的三种方法"></a>Linux重启网卡的三种方法</h2><h3 id="一、network"><a href="#一、network" class="headerlink" title="一、network"></a>一、network</h3><p>利用root帐户<br>service network restart<br>或者/etc/init.d/networking restart</p>
<h3 id="二、ifdown-ifup"><a href="#二、ifdown-ifup" class="headerlink" title="二、ifdown/ifup"></a>二、ifdown/ifup</h3><p>ifdown eth0<br>ifup eth0</p>
<h3 id="三、ifconfig"><a href="#三、ifconfig" class="headerlink" title="三、ifconfig"></a>三、ifconfig</h3><p>ifconfig eth0 down<br>ifconfig eth0 up</p>
<h3 id="四、重启失效"><a href="#四、重启失效" class="headerlink" title="四、重启失效"></a>四、重启失效</h3><p>Ubuntu14.04修改配置，重启网卡没有生效，出现如下问题：<br>service  networking restart //重启网络服务<br>stop: Job failed while stopping<br>start: Job is already running: networking</p>
<p>tail -f /var/log/upstart/networking.log //查看错误日志<br>Stopping or restarting the networking job is notsupported.<br>Use ifdown &amp; ifup to reconfigure desired interface.</p>
<p>从以上日志内容可以看出，传统的service重启和停止网络已经不再支持了，需要通过使用ifdown &amp;ifup来实现相应的操作。<br>重启指定网卡：<br>ifdown eth0 &amp;&amp; ifup eth0</p>
<h2 id="su命令不能切换root的问题"><a href="#su命令不能切换root的问题" class="headerlink" title="su命令不能切换root的问题"></a>su命令不能切换root的问题</h2><p>提示su: Authentication failure，只要你sudo passwd root过一次之后，下次再su的时候只要输入密码就可以成功登录了。</p>
<h2 id="Ubuntu安装kvm"><a href="#Ubuntu安装kvm" class="headerlink" title="Ubuntu安装kvm"></a>Ubuntu安装kvm</h2><h3 id="一、安装KVM前的检测工作：检测电脑CPU是否支持虚拟化"><a href="#一、安装KVM前的检测工作：检测电脑CPU是否支持虚拟化" class="headerlink" title="一、安装KVM前的检测工作：检测电脑CPU是否支持虚拟化"></a>一、安装KVM前的检测工作：检测电脑CPU是否支持虚拟化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># egrep -c '(vmx|svm)' /proc/cpuinfo</span></div></pre></td></tr></table></figure>
<p>输出结果为0,不支持<br>输出结果大于0,支持</p>
<h3 id="二、使用root用户给当前用户增加sudo的权限，避免在安装是需要输入root密码"><a href="#二、使用root用户给当前用户增加sudo的权限，避免在安装是需要输入root密码" class="headerlink" title="二、使用root用户给当前用户增加sudo的权限，避免在安装是需要输入root密码"></a>二、使用root用户给当前用户增加sudo的权限，避免在安装是需要输入root密码</h3><p>输入如下命令:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="string">"zhy ALL=(ALL) ALL"</span> &gt;&gt;/etc/sudoers</div><div class="line"><span class="built_in">echo</span> <span class="string">"zhy ALL=(ALL) NOPASSWD:ALL"</span> &gt;&gt;/etc/sudoers</div></pre></td></tr></table></figure></p>
<p>其中zhy是用户名</p>
<h3 id="三、重新登录Ubuntu，验证sudo权限"><a href="#三、重新登录Ubuntu，验证sudo权限" class="headerlink" title="三、重新登录Ubuntu，验证sudo权限"></a>三、重新登录Ubuntu，验证sudo权限</h3><p>输入sudo apt-get update命令，如果没有提示要求输入密码则表示设置sudo权限成功</p>
<h3 id="四、安装KVM程序包"><a href="#四、安装KVM程序包" class="headerlink" title="四、安装KVM程序包"></a>四、安装KVM程序包</h3><p>root权限下输入命令：<br>sudo apt-get install qemu-kvm libvirt-bin ubuntu-vm-builder bridge-utils<br>安装完成后需要重新登录系统，输入命令groups，确保用户已经加入libvirtd群组中</p>
<h4 id="踩坑-Ubuntu不支持yum安装kvm，适用于CentOS。"><a href="#踩坑-Ubuntu不支持yum安装kvm，适用于CentOS。" class="headerlink" title="踩坑 || Ubuntu不支持yum安装kvm，适用于CentOS。"></a>踩坑 || Ubuntu不支持yum安装kvm，适用于CentOS。</h4><p><a href="https://www.cnblogs.com/lk-fxtx/p/7692773.html" target="_blank" rel="external">参见文档</a></p>
<h3 id="五、验证KVM安装是否成功"><a href="#五、验证KVM安装是否成功" class="headerlink" title="五、验证KVM安装是否成功"></a>五、验证KVM安装是否成功</h3><p>输入命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">virsh list --all</div></pre></td></tr></table></figure></p>
<p>如果没有错误提示则安装成功</p>
<h3 id="六、安装KVM虚拟机GUI管理工具"><a href="#六、安装KVM虚拟机GUI管理工具" class="headerlink" title="六、安装KVM虚拟机GUI管理工具"></a>六、安装KVM虚拟机GUI管理工具</h3><p>root权限下输入命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># apt-get install virt-manager</span></div></pre></td></tr></table></figure></p>
<h4 id="踩坑-virt-manager-linux上虚拟机安装错误处理："><a href="#踩坑-virt-manager-linux上虚拟机安装错误处理：" class="headerlink" title="踩坑 || virt-manager linux上虚拟机安装错误处理："></a>踩坑 || virt-manager linux上虚拟机安装错误处理：</h4><p>error: Failed to connect socket to ‘/var/run/libvirt/libvirt-sock’: No such file or directory</p>
<h5 id="1、换成ustc的源，-其他的源请自查"><a href="#1、换成ustc的源，-其他的源请自查" class="headerlink" title="1、换成ustc的源，(其他的源请自查)"></a>1、换成ustc的源，(其他的源请自查)</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vi /etc/apt/sources.list</div></pre></td></tr></table></figure>
<p>修改文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">deb http://debian.ustc.edu.cn/debian stable main non-free contrib</div><div class="line">deb-src http://debian.ustc.edu.cn/debian stable main non-free contrib</div><div class="line">deb http://debian.ustc.edu.cn/debian proposed-updates main contrib non-free</div><div class="line">deb-src http://debian.ustc.edu.cn/debian proposed-updates main contrib non-free</div><div class="line">deb http://debian.ustc.edu.cn/debian-security stable/updates main</div><div class="line"></div><div class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ xenial main restricted universe multiverse</div><div class="line"><span class="comment"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ xenial main main restricted universe multiverse</span></div><div class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</div><div class="line"><span class="comment"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span></div><div class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</div><div class="line"><span class="comment"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span></div><div class="line">deb https://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</div><div class="line"><span class="comment"># deb-src https://mirrors.ustc.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span></div></pre></td></tr></table></figure></p>
<h5 id="2、安装kvm"><a href="#2、安装kvm" class="headerlink" title="2、安装kvm"></a>2、安装kvm</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install kvm</div></pre></td></tr></table></figure>
<h5 id="3、卸载virt-manager-再安装一遍"><a href="#3、卸载virt-manager-再安装一遍" class="headerlink" title="3、卸载virt-manager .再安装一遍"></a>3、卸载virt-manager .再安装一遍</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt-get autoremove virt-manager   //卸载</div><div class="line">sudo apt-get install virt-manager   //安装</div></pre></td></tr></table></figure>
<h5 id="4、去-var-run-libvirt-给-libvirt-sock-libvirt-sock-ro-virtlockd-sock-这三个文件加权限"><a href="#4、去-var-run-libvirt-给-libvirt-sock-libvirt-sock-ro-virtlockd-sock-这三个文件加权限" class="headerlink" title="4、去 /var/run/libvirt  给 libvirt-sock  libvirt-sock-ro virtlockd-sock 这三个文件加权限"></a>4、去 /var/run/libvirt  给 libvirt-sock  libvirt-sock-ro virtlockd-sock 这三个文件加权限</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo chmod -R 777 libvirt-sock</div><div class="line">sudo chmod -R 777 libvirt-sock-ro </div><div class="line">sudo chmod -R 777 virtlockd-sock</div></pre></td></tr></table></figure>
<h5 id="5、重启服务"><a href="#5、重启服务" class="headerlink" title="5、重启服务"></a>5、重启服务</h5><p>service libvirtd restart</p>
<h3 id="七、使用虚拟机GUI管理工具创建虚拟机"><a href="#七、使用虚拟机GUI管理工具创建虚拟机" class="headerlink" title="七、使用虚拟机GUI管理工具创建虚拟机"></a>七、使用虚拟机GUI管理工具创建虚拟机</h3><p>搜索Virtual Machine Manager,打开虚拟机管理工具进行虚拟机的创建<br>创建虚拟机时使用准备好的iso文件，然后按照说明Forward</p>
<h2 id="Xshell连接不上Ubuntu的问题"><a href="#Xshell连接不上Ubuntu的问题" class="headerlink" title="Xshell连接不上Ubuntu的问题"></a>Xshell连接不上Ubuntu的问题</h2><p>通常报错: … … (port:22): connection failed.<br>原因：没有真正开启ssh-server服务<br>解决方法：</p>
<h3 id="一、安装ssh-server服务"><a href="#一、安装ssh-server服务" class="headerlink" title="一、安装ssh-server服务"></a>一、安装ssh-server服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install openssh-server</div></pre></td></tr></table></figure>
<h3 id="二、确认ssh-server是否启动"><a href="#二、确认ssh-server是否启动" class="headerlink" title="二、确认ssh-server是否启动"></a>二、确认ssh-server是否启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ps -e |grep ssh</div></pre></td></tr></table></figure>
<h3 id="三、启动ssh"><a href="#三、启动ssh" class="headerlink" title="三、启动ssh"></a>三、启动ssh</h3><p>如果只有ssh-agent，表示ssh-server还没有启动，需要：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/ssh start</div></pre></td></tr></table></figure></p>
<p>如果看到sshd，则ssh-server已经启动了。</p>
<h3 id="四、补充"><a href="#四、补充" class="headerlink" title="四、补充"></a>四、补充</h3><p>ssh-server配置文件位于：<br>/etc/ssh/sshd_config<br>在这里可以定义SSH的服务端口，默认端口是22，你可以自己定义成其他端口号，<br>如21。然后重启SSH服务：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo /etc/init.d/ssh resart</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先解决设备不能上网的问题：&lt;br&gt;手动设置静态IP&lt;br&gt;1、vim /etc/network/interfaces&lt;/p&gt;
&lt;p&gt;2、修改文件内容&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;auto lo&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;iface lo inet loopback&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;auto eth0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;iface eth0 inet static&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;address 192.168.199.186&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;netmask 255.255.255.0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;gateway 192.168.199.1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;dns-nameserver 8.8.8.8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3、配置DNS解析器&lt;br&gt;vim /etc/reslov.conf，输入&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;nameserver 8.8.8.8  //(8.8.8.8谷歌的DNS解析器，可能比较慢)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;nameserver 114.114.114.114  //(国内的DNS解析器)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;但是Ubuntu Server 中resolv.conf重启时会被覆盖，解决方法如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1.需要创建一个文件/etc/resolvconf/resolv.conf.d/tail&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo vi /etc/resolvconf/resolv.conf.d/tail&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2.在该文件中写入自己需要的dns服务器，格式与/etc/resolv.conf相同&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;nameserver 8.8.8.8  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3.重启下resolvconf程序&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo /etc/init.d/resolvconf restart &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;再去看看/etc/resolv.conf文件,可以看到自己添加的dns服务器已经加到该文件中&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;4、重启网络sudo /etc/init.d/networking restart&lt;br&gt;   重启网卡还有以下几种方法：&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="http://weibo.com/categories/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP毫秒级时间戳和日期格式转换</title>
    <link href="http://weibo.com/2018/06/17/PHP%E6%AF%AB%E7%A7%92%E7%BA%A7%E6%97%B6%E9%97%B4%E6%88%B3%E5%92%8C%E6%97%A5%E6%9C%9F%E6%A0%BC%E5%BC%8F%E8%BD%AC%E6%8D%A2/"/>
    <id>http://weibo.com/2018/06/17/PHP毫秒级时间戳和日期格式转换/</id>
    <published>2018-06-17T11:44:15.000Z</published>
    <updated>2018-12-14T09:50:52.579Z</updated>
    
    <content type="html"><![CDATA[<p>在并发量搞得情况下。需要开启毫秒级运算<br>mysql  支持：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">`create_time` datetime(3) DEFAULT NULL COMMENT <span class="string">'创建时间'</span>,</div></pre></td></tr></table></figure></p>
<p>PHP 代码实现：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">    <span class="variable">$a</span> = get_msectime();</div><div class="line">    <span class="variable">$b</span> = get_microtime_format(<span class="variable">$a</span>*0.001);</div><div class="line">    <span class="variable">$c</span> = get_data_format(<span class="variable">$b</span>);</div><div class="line"></div><div class="line">    <span class="built_in">echo</span> <span class="variable">$a</span>;</div><div class="line">    <span class="built_in">echo</span> <span class="string">"&lt;pre&gt;"</span>;</div><div class="line">    <span class="built_in">echo</span> <span class="variable">$b</span>;</div><div class="line">    <span class="built_in">echo</span> <span class="string">"&lt;pre&gt;"</span>;</div><div class="line">    <span class="built_in">echo</span> <span class="variable">$c</span>;</div><div class="line"></div><div class="line">    //返回当前的毫秒时间戳</div><div class="line">    <span class="keyword">function</span> <span class="function"><span class="title">get_msectime</span></span>() &#123;</div><div class="line">        list(<span class="variable">$msec</span>, <span class="variable">$sec</span>) = explode(<span class="string">' '</span>, microtime());</div><div class="line">        <span class="variable">$msectime</span> =  (<span class="built_in">float</span>)sprintf(<span class="string">'%.0f'</span>, (floatval(<span class="variable">$msec</span>) + floatval(<span class="variable">$sec</span>)) * 1000);</div><div class="line">        <span class="built_in">return</span> <span class="variable">$msectime</span>;</div><div class="line">     &#125;</div><div class="line">     </div><div class="line">     /** </div><div class="line">      *时间戳 转   日期格式 ： 精确到毫秒，x代表毫秒</div><div class="line">      */</div><div class="line">     <span class="keyword">function</span> get_microtime_format(<span class="variable">$time</span>)</div><div class="line">     &#123;  </div><div class="line">        <span class="keyword">if</span>(strstr(<span class="variable">$time</span>,<span class="string">'.'</span>))&#123;</div><div class="line">            sprintf(<span class="string">"%01.3f"</span>,<span class="variable">$time</span>); //小数点。不足三位补0</div><div class="line">            list(<span class="variable">$usec</span>, <span class="variable">$sec</span>) = explode(<span class="string">"."</span>,<span class="variable">$time</span>);</div><div class="line">            <span class="variable">$sec</span> = str_pad(<span class="variable">$sec</span>,3,<span class="string">"0"</span>,STR_PAD_RIGHT); //不足3位。右边补0</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            <span class="variable">$usec</span> = <span class="variable">$time</span>;</div><div class="line">            <span class="variable">$sec</span> = <span class="string">"000"</span>; </div><div class="line">        &#125;</div><div class="line">        <span class="variable">$date</span> = date(<span class="string">"Y-m-d H:i:s.x"</span>,<span class="variable">$usec</span>);</div><div class="line">        <span class="built_in">return</span> str_replace(<span class="string">'x'</span>, <span class="variable">$sec</span>, <span class="variable">$date</span>);</div><div class="line">     &#125;</div><div class="line"></div><div class="line">      /** 时间日期转时间戳格式，精确到毫秒，</div><div class="line">      *     </div><div class="line">      */</div><div class="line">     <span class="keyword">function</span> get_data_format(<span class="variable">$time</span>)</div><div class="line">     &#123;</div><div class="line">        list(<span class="variable">$usec</span>, <span class="variable">$sec</span>) = explode(<span class="string">"."</span>, <span class="variable">$time</span>);</div><div class="line">        <span class="variable">$date</span> = strtotime(<span class="variable">$usec</span>);</div><div class="line">        <span class="variable">$return_data</span> = str_pad(<span class="variable">$date</span>.<span class="variable">$sec</span>,13,<span class="string">"0"</span>,STR_PAD_RIGHT); //不足13位。右边补0</div><div class="line">        <span class="built_in">return</span> <span class="variable">$return_data</span>;</div><div class="line">     &#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在并发量搞得情况下。需要开启毫秒级运算&lt;br&gt;mysql  支持：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/t
    
    </summary>
    
      <category term="PHP" scheme="http://weibo.com/categories/PHP/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP读取文件内容的五种方式</title>
    <link href="http://weibo.com/2018/05/28/PHP%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9%E7%9A%84%E4%BA%94%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
    <id>http://weibo.com/2018/05/28/PHP读取文件内容的五种方式/</id>
    <published>2018-05-28T11:33:02.000Z</published>
    <updated>2018-12-14T09:50:39.837Z</updated>
    
    <content type="html"><![CDATA[<p>实际应用当中，请注意关闭 fclose($fp);</p>
<h2 id="fread"><a href="#fread" class="headerlink" title="fread()"></a>fread()</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">    <span class="variable">$file_path</span> = <span class="string">"test.txt"</span>;</div><div class="line">    <span class="keyword">if</span>(file_exists(<span class="variable">$file_path</span>))&#123;</div><div class="line">        <span class="variable">$fp</span> = fopen(<span class="variable">$file_path</span>,<span class="string">"r"</span>);</div><div class="line">        <span class="variable">$str</span> = fread(<span class="variable">$fp</span>,filesize(<span class="variable">$file_path</span>));//指定读取大小，这里把整个文件内容读取出来</div><div class="line">        <span class="built_in">echo</span> <span class="variable">$str</span> = str_replace(<span class="string">"\r\n"</span>,<span class="string">"&lt;br /&gt;"</span>,<span class="variable">$str</span>);</div><div class="line">    &#125;</div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<h2 id="file-get-contents"><a href="#file-get-contents" class="headerlink" title="file_get_contents()"></a>file_get_contents()</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">    <span class="variable">$file_path</span> = <span class="string">"test.txt"</span>;</div><div class="line">    <span class="keyword">if</span>(file_exists(<span class="variable">$file_path</span>))&#123;</div><div class="line">        <span class="variable">$str</span> = file_get_contents(<span class="variable">$file_path</span>);//将整个文件内容读入到一个字符串中</div><div class="line">        <span class="variable">$str</span> = str_replace(<span class="string">"\r\n"</span>,<span class="string">"&lt;br /&gt;"</span>,<span class="variable">$str</span>);</div><div class="line">            <span class="built_in">echo</span> <span class="variable">$str</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<h2 id="feof-fread"><a href="#feof-fread" class="headerlink" title="feof() fread()"></a>feof() fread()</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">    <span class="variable">$file_path</span> = <span class="string">"test.txt"</span>;</div><div class="line">    <span class="keyword">if</span>(file_exists(<span class="variable">$file_path</span>))&#123;</div><div class="line">        <span class="variable">$fp</span> = fopen(<span class="variable">$file_path</span>,<span class="string">"r"</span>);</div><div class="line">        <span class="variable">$str</span> = <span class="string">""</span>;</div><div class="line">        <span class="variable">$buffer</span> = 1024;//每次读取 1024 字节</div><div class="line">        <span class="keyword">while</span>(!feof(<span class="variable">$fp</span>))&#123;//循环读取，直至读取完整个文件</div><div class="line">            <span class="variable">$str</span> .= fread(<span class="variable">$fp</span>,<span class="variable">$buffer</span>);</div><div class="line">        &#125; </div><div class="line">        <span class="variable">$str</span> = str_replace(<span class="string">"\r\n"</span>,<span class="string">"&lt;br /&gt;"</span>,<span class="variable">$str</span>);</div><div class="line">            <span class="built_in">echo</span> <span class="variable">$str</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<h2 id="count"><a href="#count" class="headerlink" title="count()"></a>count()</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">    <span class="variable">$file_path</span> = <span class="string">"test.txt"</span>;</div><div class="line">    <span class="keyword">if</span>(file_exists(<span class="variable">$file_path</span>))&#123;</div><div class="line">        <span class="variable">$file_arr</span> = file(<span class="variable">$file_path</span>);</div><div class="line">        <span class="keyword">for</span>(<span class="variable">$i</span>=0;<span class="variable">$i</span>&lt;count(<span class="variable">$file_arr</span>);<span class="variable">$i</span>++)&#123;//逐行读取文件内容</div><div class="line">            <span class="built_in">echo</span> <span class="variable">$file_arr</span>[<span class="variable">$i</span>].<span class="string">"&lt;br /&gt;"</span>;</div><div class="line">        &#125;</div><div class="line">        /*</div><div class="line">        foreach(<span class="variable">$file_arr</span> as <span class="variable">$value</span>)&#123;</div><div class="line">            <span class="built_in">echo</span> <span class="variable">$value</span>.<span class="string">"&lt;br /&gt;"</span>;</div><div class="line">        &#125;*/</div><div class="line">    &#125;</div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<h2 id="fgets"><a href="#fgets" class="headerlink" title="fgets()"></a>fgets()</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">    <span class="variable">$file_path</span> = <span class="string">"test.txt"</span>;</div><div class="line">    <span class="keyword">if</span>(file_exists(<span class="variable">$file_path</span>))&#123;</div><div class="line">        <span class="variable">$fp</span> = fopen(<span class="variable">$file_path</span>,<span class="string">"r"</span>);</div><div class="line">        <span class="variable">$str</span> =<span class="string">""</span>;</div><div class="line">        <span class="keyword">while</span>(!feof(<span class="variable">$fp</span>))&#123;</div><div class="line">            <span class="variable">$str</span> .= fgets(<span class="variable">$fp</span>);//逐行读取。如果fgets不写length参数，默认是读取1k。</div><div class="line">        &#125;</div><div class="line">        <span class="variable">$str</span> = str_replace(<span class="string">"\r\n"</span>,<span class="string">"&lt;br /&gt;"</span>,<span class="variable">$str</span>);</div><div class="line">            <span class="built_in">echo</span> <span class="variable">$str</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">?&gt;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;实际应用当中，请注意关闭 fclose($fp);&lt;/p&gt;
&lt;h2 id=&quot;fread&quot;&gt;&lt;a href=&quot;#fread&quot; class=&quot;headerlink&quot; title=&quot;fread()&quot;&gt;&lt;/a&gt;fread()&lt;/h2&gt;&lt;figure class=&quot;highlight
    
    </summary>
    
      <category term="PHP" scheme="http://weibo.com/categories/PHP/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP获取文件信息相关基础函数</title>
    <link href="http://weibo.com/2018/05/15/PHP%E8%8E%B7%E5%8F%96%E6%96%87%E4%BB%B6%E4%BF%A1%E6%81%AF%E7%9B%B8%E5%85%B3%E5%9F%BA%E7%A1%80%E5%87%BD%E6%95%B0/"/>
    <id>http://weibo.com/2018/05/15/PHP获取文件信息相关基础函数/</id>
    <published>2018-05-15T11:00:09.000Z</published>
    <updated>2018-12-14T09:50:24.237Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">//设置临时时区</div><div class="line">&lt;?php</div><div class="line">header(<span class="string">'content-type:text/html;charset=utf-8'</span>);</div><div class="line">date_default_timezone_set(<span class="string">'PRC'</span>);</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">* 文件信息相关API</div><div class="line">*/</div><div class="line"><span class="variable">$filename</span>=<span class="string">"./test1.txt"</span>;</div><div class="line"></div><div class="line">// <span class="variable">$filename</span>=<span class="string">"test"</span>;</div><div class="line">//filetype(<span class="variable">$filename</span>):获取文件的类型,返回的是文件的类型</div><div class="line"><span class="built_in">echo</span> <span class="string">'文件类型为：'</span>,filetype(<span class="variable">$filename</span>),<span class="string">'&lt;br/&gt;'</span>;</div><div class="line"></div><div class="line">//filesize(<span class="variable">$filename</span>):获得文件的大小,返回字节</div><div class="line"><span class="built_in">echo</span> <span class="string">'文件大小为：'</span>,filesize(<span class="variable">$filename</span>),<span class="string">'&lt;br/&gt;'</span>;</div><div class="line"></div><div class="line">//filectime(<span class="variable">$filename</span>):获取文件的创建时间</div><div class="line"><span class="built_in">echo</span> <span class="string">'文件创建时间为：'</span>,filectime(<span class="variable">$filename</span>),<span class="string">'&lt;br/&gt;'</span>;</div><div class="line"><span class="built_in">echo</span> <span class="string">'文件创建时间为：'</span>,date(<span class="string">'Y年m月d日 H:i:s'</span>,filectime(<span class="variable">$filename</span>)),<span class="string">'&lt;br/&gt;'</span>;</div><div class="line"></div><div class="line">//filemtime(<span class="variable">$filename</span>):文件的修改时间</div><div class="line"><span class="built_in">echo</span> <span class="string">'文件的修改时间为：'</span>,date(<span class="string">"Y/m/d H:i:s"</span>,filemtime(<span class="variable">$filename</span>)),<span class="string">'&lt;br/&gt;'</span>;</div><div class="line"></div><div class="line">//fileatime(<span class="variable">$filename</span>):文件的最后访问时间</div><div class="line"><span class="built_in">echo</span> <span class="string">'文件的最后访问时间为：'</span>,date(<span class="string">"Y/m/d H:i:s"</span>,fileatime(<span class="variable">$filename</span>)),<span class="string">'&lt;br/&gt;'</span>;</div><div class="line"><span class="built_in">echo</span> <span class="string">'&lt;hr/&gt;'</span>;</div><div class="line"></div><div class="line">//检测文件是否可读、可写、可执行is_readable()、is_writeable()、is_executable();</div><div class="line">var_dump(</div><div class="line">is_readable(<span class="variable">$filename</span>),</div><div class="line">is_writable(<span class="variable">$filename</span>),</div><div class="line">is_writeable(<span class="variable">$filename</span>),</div><div class="line">is_executable(<span class="variable">$filename</span>)</div><div class="line">);</div><div class="line"></div><div class="line">//is_file(<span class="variable">$filename</span>):检测是否为文件,并且文件存在</div><div class="line"><span class="variable">$filename</span>=<span class="string">'./test1.txt'</span>;</div><div class="line"><span class="variable">$filename</span>=<span class="string">'./test2.txt'</span>;</div><div class="line">var_dump(is_file(<span class="variable">$filename</span>));</div><div class="line"></div><div class="line">/**</div><div class="line">* pathinfo():文件路径相关信息</div><div class="line">*/</div><div class="line"></div><div class="line"><span class="variable">$filename</span>=<span class="string">"./test1.txt"</span>;</div><div class="line"><span class="variable">$pathinfo</span>=pathinfo(<span class="variable">$filename</span>);</div><div class="line">print_r(<span class="variable">$pathinfo</span>);</div><div class="line">/*</div><div class="line">Array</div><div class="line">(</div><div class="line">[dirname] =&gt; .</div><div class="line">[basename] =&gt; test1.txt</div><div class="line">[extension] =&gt; txt</div><div class="line">[filename] =&gt; test1</div><div class="line">)</div><div class="line">*/</div><div class="line"><span class="built_in">echo</span> <span class="string">'文件扩展名：'</span>,pathinfo(<span class="variable">$filename</span>,PATHINFO_EXTENSION),<span class="string">'&lt;br/&gt;'</span>;</div><div class="line"><span class="built_in">echo</span> <span class="string">'&lt;hr/&gt;'</span>;</div><div class="line"><span class="variable">$filename</span>=__FILE__;</div><div class="line">// <span class="built_in">echo</span> <span class="variable">$filename</span>;</div><div class="line"></div><div class="line"><span class="built_in">echo</span> pathinfo(<span class="variable">$filename</span>,PATHINFO_DIRNAME),<span class="string">'&lt;br/&gt;'</span>;</div><div class="line"><span class="built_in">echo</span> pathinfo(<span class="variable">$filename</span>,PATHINFO_BASENAME),<span class="string">'&lt;br/&gt;'</span>;</div><div class="line"><span class="built_in">echo</span> pathinfo(<span class="variable">$filename</span>,PATHINFO_EXTENSION),<span class="string">'&lt;br/&gt;'</span>;</div><div class="line"><span class="built_in">echo</span> pathinfo(<span class="variable">$filename</span>,PATHINFO_FILENAME),<span class="string">'&lt;br/&gt;'</span>;</div><div class="line"></div><div class="line">//basename():返回路径中的文件名部分</div><div class="line"><span class="built_in">echo</span> basename(<span class="variable">$filename</span>),<span class="string">'&lt;br/&gt;'</span>;</div><div class="line"></div><div class="line"><span class="built_in">echo</span> basename(<span class="variable">$filename</span>,<span class="string">'.php'</span>),<span class="string">'&lt;br/&gt;'</span>;返回路径中的文件名部分 不包含.php后缀</div><div class="line">//dirname():返回文件名中路径部分</div><div class="line"><span class="built_in">echo</span> dirname(<span class="variable">$filename</span>),<span class="string">'&lt;br/&gt;'</span>;</div><div class="line"></div><div class="line">//file_exists():检测文件或者目录是否存在</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div c
    
    </summary>
    
      <category term="PHP" scheme="http://weibo.com/categories/PHP/"/>
    
    
  </entry>
  
  <entry>
    <title>PHP操作数组</title>
    <link href="http://weibo.com/2018/04/28/PHP%E6%93%8D%E4%BD%9C%E6%95%B0%E7%BB%84/"/>
    <id>http://weibo.com/2018/04/28/PHP操作数组/</id>
    <published>2018-04-28T10:06:35.000Z</published>
    <updated>2018-12-14T09:50:06.786Z</updated>
    
    <content type="html"><![CDATA[<p>数组的合并，追加，删除，拆分，查找等</p>
<h2 id="1-合并数组"><a href="#1-合并数组" class="headerlink" title="1. 合并数组"></a>1. 合并数组</h2><p>array_merge()函数将数组合并到一起，返回一个联合的数组。所得到的数组以第一个输入数组参数开始，按后面数组参数出现的顺序依次迫加。其形式为：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">array array_merge (array array1 array2…,arrayN)</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>这个函数将一个或多个数组的单元合并起来，一个数组中的值附加在前一个数组的后面。返回作为结果的数组。</p>
<p>如果输入的数组中有相同的字符串键名，则该键名后面的值将覆盖前一个值。然而，如果数组包含数字键名，后面的值将不会覆盖原来的值，而是附加到后面。</p>
<p>如果只给了一个数组并且该数组是数字索引的，则键名会以连续方式重新索引。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;?php  </div><div class="line"><span class="variable">$fruits</span> = array(<span class="string">"apple"</span>,<span class="string">"banana"</span>,<span class="string">"pear"</span>);  </div><div class="line"><span class="variable">$numbered</span> = array(<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>);  </div><div class="line"><span class="variable">$cards</span> = array_merge(<span class="variable">$fruits</span>, <span class="variable">$numbered</span>);  </div><div class="line">print_r(<span class="variable">$cards</span>);  </div><div class="line">  </div><div class="line">// output  </div><div class="line">// Array ( [0] =&gt; apple [1] =&gt; banana [2] =&gt; pear [3] =&gt; 1 [4] =&gt; 2 [5] =&gt; 3 )  </div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<h2 id="2-追加数组"><a href="#2-追加数组" class="headerlink" title="2. 追加数组"></a>2. 追加数组</h2><p>array_merge_recursive()函数与array_merge()相同，可以将两个或多个数组合并在一起，形成一个联合的数组．两者之间的区别在于，当某个输入数组中的某个键己经存在于结果数组中时该函数会采取不同的处理方式．array_merge()会覆盖前面存在的键/值对， 替换为当前输入数组中的键/值对，而array_merge_recursive()将把两个值合并在一起，形成一个新的数组，并以原有的键作为数组名。 还有一个数组合并的形式，就是递归追加数组。其形式为：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">array array_merge_recursive(array array1,array array2[…,array arrayN])</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;?php  </div><div class="line"><span class="variable">$fruit1</span> = array(<span class="string">"apple"</span> =&gt; <span class="string">"red"</span>, <span class="string">"banana"</span> =&gt; <span class="string">"yellow"</span>);  </div><div class="line"><span class="variable">$fruit2</span> = array(<span class="string">"pear"</span> =&gt; <span class="string">"yellow"</span>, <span class="string">"apple"</span> =&gt; <span class="string">"green"</span>);  </div><div class="line"><span class="variable">$result</span> = array_merge_recursive(<span class="variable">$fruit1</span>, <span class="variable">$fruit2</span>);  </div><div class="line">print_r(<span class="variable">$result</span>);  </div><div class="line">  </div><div class="line">// output  </div><div class="line">// Array ( [apple] =&gt; Array ( [0] =&gt; red [1] =&gt; green ) [banana] =&gt; yellow [pear] =&gt; yellow )  </div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<p>现在键 apple 指向一个数组，这个数组由两个颜色值组成的索引数组。</p>
<h2 id="3-连接数组"><a href="#3-连接数组" class="headerlink" title="3. 连接数组"></a>3. 连接数组</h2><p>array_combine()函数会得到一个新数组，它由一组提交的键和对应的值组成。其形式为：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">array array_combine(array keys,array values)  </div><div class="line">``` </div><div class="line">注意，两个输入数组必须大小相同，不能为空。示例如下</div><div class="line">``` bash</div><div class="line">&lt;?php  </div><div class="line"><span class="variable">$name</span> = array(<span class="string">"apple"</span>, <span class="string">"banana"</span>, <span class="string">"orange"</span>);  </div><div class="line"><span class="variable">$color</span> = array(<span class="string">"red"</span>, <span class="string">"yellow"</span>, <span class="string">"orange"</span>);  </div><div class="line"><span class="variable">$fruit</span> = array_combine(<span class="variable">$name</span>, <span class="variable">$color</span>);  </div><div class="line">print_r(<span class="variable">$fruit</span>);  </div><div class="line">  </div><div class="line">// output  </div><div class="line">// Array ( [apple] =&gt; red [banana] =&gt; yellow [orange] =&gt; orange )  </div><div class="line">?&gt;</div></pre></td></tr></table></figure></p>
<h2 id="4-拆分数组-array-slice"><a href="#4-拆分数组-array-slice" class="headerlink" title="4. 拆分数组 array_slice()"></a>4. 拆分数组 array_slice()</h2><p>array_slice()函数将返回数组中的一部分，从键offset开始，到offset+length位置结束。其形式：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">array array_slice (array array, int offset[,int length]) </div><div class="line">```  </div><div class="line"></div><div class="line">offset 为正值时，拆分将从距数组开头的offset 位置开始；如果offset 为负值，则拆分从距数组末尾的offset 位置开始。如果省略了可选参数length，则拆分将从offset 开始，一直到数组的最后一个元素。如果给出了length 且为正数，则会在距数组开头的offset+length 位置结束。相反，如果给出了length且为负数，则在距数组开头的count(input_array)-|length|位置结束。考虑一个例子：</div><div class="line"></div><div class="line">```bash</div><div class="line">&lt;?php  </div><div class="line"><span class="variable">$fruits</span> = array(<span class="string">"Apple"</span>, <span class="string">"Banana"</span>, <span class="string">"Orange"</span>, <span class="string">"Pear"</span>, <span class="string">"Grape"</span>, <span class="string">"Lemon"</span>, <span class="string">"Watermelon"</span>);  </div><div class="line"><span class="variable">$subset</span> = array_slice(<span class="variable">$fruits</span>, 3);  </div><div class="line">print_r(<span class="variable">$subset</span>);  </div><div class="line">  </div><div class="line">// output  </div><div class="line">// Array ( [0] =&gt; Pear [1] =&gt; Grape [2] =&gt; Lemon [3] =&gt; Watermelon )  </div><div class="line">?&gt;</div></pre></td></tr></table></figure></p>
<p>然后我们使用下负长度：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;?php  </div><div class="line"><span class="variable">$fruits</span> = array(<span class="string">"Apple"</span>, <span class="string">"Banana"</span>, <span class="string">"Orange"</span>, <span class="string">"Pear"</span>, <span class="string">"Grape"</span>, <span class="string">"Lemon"</span>, <span class="string">"Watermelon"</span>);  </div><div class="line"><span class="variable">$subset</span> = array_slice(<span class="variable">$fruits</span>, 2, -2);  </div><div class="line">print_r(<span class="variable">$subset</span>);  </div><div class="line"></div><div class="line">// output  </div><div class="line">// Array ( [0] =&gt; Orange [1] =&gt; Pear [2] =&gt; Grape )  </div><div class="line">?&gt;  </div><div class="line">```</div></pre></td></tr></table></figure></p>
<h2 id="5-接合数组-array-splice"><a href="#5-接合数组-array-splice" class="headerlink" title="5. 接合数组 array_splice()"></a>5. 接合数组 array_splice()</h2><p>array_splice()函数会删除数组中从offset开始到offset+length 结束的所有元素，并以数组的形式返回所删除的元素。其形式为：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">array array_splice ( array array , int offset[,length[,array replacement]])   </div><div class="line">``` </div><div class="line"></div><div class="line">offset 为正值时，则接合将从距数组开头的offset 位置开始，offset 为负值时，接合将从距数组末尾的offset 位置开始。如果忽略可选的length 参数，则从offset 位置开始到数组结束之间的所有元素都将被删除。如果给出了length 且为正值，则接合将在距数组开头的offset + leng th 位置结束。相反，如果给出了length且为负值，则结合将在距数组开头的count(input_array)-length的位置结束。实例如下：</div><div class="line"></div><div class="line">``` bash</div><div class="line">&lt;?php    </div><div class="line"><span class="variable">$fruits</span> = array(<span class="string">"Apple"</span>, <span class="string">"Banana"</span>, <span class="string">"Orange"</span>, <span class="string">"Pear"</span>, <span class="string">"Grape"</span>, <span class="string">"Lemon"</span>, <span class="string">"Watermelon"</span>);  </div><div class="line"><span class="variable">$subset</span> = array_splice(<span class="variable">$fruits</span>, 4);  </div><div class="line">  </div><div class="line">print_r(<span class="variable">$fruits</span>);  </div><div class="line">print_r(<span class="variable">$subset</span>);  </div><div class="line">  </div><div class="line">// output  </div><div class="line">// Array ( [0] =&gt; Apple [1] =&gt; Banana [2] =&gt; Orange [3] =&gt; Pear )   </div><div class="line">// Array ( [0] =&gt; Grape [1] =&gt; Lemon [2] =&gt; Watermelon )  </div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<p>可以使用可选参数replacement来指定取代目标部分的数组。实例如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;?php  </div><div class="line"><span class="variable">$fruits</span> = array(<span class="string">"Apple"</span>, <span class="string">"Banana"</span>, <span class="string">"Orange"</span>, <span class="string">"Pear"</span>, <span class="string">"Grape"</span>, <span class="string">"Lemon"</span>, <span class="string">"Watermelon"</span>);  </div><div class="line"><span class="variable">$subset</span> = array_splice(<span class="variable">$fruits</span>, 2, -1, array(<span class="string">"Green Apple"</span>, <span class="string">"Red Apple"</span>));  </div><div class="line">  </div><div class="line">print_r(<span class="variable">$fruits</span>);  </div><div class="line">print_r(<span class="variable">$subset</span>);  </div><div class="line">  </div><div class="line">// output  </div><div class="line">// Array ( [0] =&gt; Apple [1] =&gt; Banana [2] =&gt; Green Apple [3] =&gt; Red Apple [4] =&gt; Watermelon )   </div><div class="line">// Array ( [0] =&gt; Orange [1] =&gt; Pear [2] =&gt; Grape [3] =&gt; Lemon )  </div><div class="line">?&gt;  </div><div class="line">```</div></pre></td></tr></table></figure>
<p>从程序可以很清楚看到这个函数的使用方法了。</p>
<h2 id="6-数组的交集-array-intersect"><a href="#6-数组的交集-array-intersect" class="headerlink" title="6. 数组的交集 array_intersect()"></a>6. 数组的交集 array_intersect()</h2><p>array_intersect()函数返回一个保留了键的数组，这个数组只由第一个数组中出现的且在其他每个输入数组中都出现的值组成。其形式如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">array array_intersect(array array1,array array2[,arrayN…])  </div><div class="line">``` </div><div class="line">下面这个例子将返回在<span class="variable">$fruit1</span>数组中出现的且在<span class="variable">$fruit2</span>和<span class="variable">$fruit3</span>中也出现的所有的水果：</div><div class="line"></div><div class="line">``` bash</div><div class="line">&lt;?php  </div><div class="line"><span class="variable">$fruit1</span> = array(<span class="string">"Apple"</span>,<span class="string">"Banana"</span>,<span class="string">"Orange"</span>);  </div><div class="line"><span class="variable">$fruit2</span> = array(<span class="string">"Pear"</span>,<span class="string">"Apple"</span>,<span class="string">"Grape"</span>);  </div><div class="line"><span class="variable">$fruit3</span> = array(<span class="string">"Watermelon"</span>,<span class="string">"Orange"</span>,<span class="string">"Apple"</span>);  </div><div class="line"><span class="variable">$intersection</span> = array_intersect(<span class="variable">$fruit1</span>, <span class="variable">$fruit2</span>, <span class="variable">$fruit3</span>);  </div><div class="line">print_r(<span class="variable">$intersection</span>);  </div><div class="line">  </div><div class="line">// output  </div><div class="line">// Array ( [0] =&gt; Apple )  </div><div class="line">?&gt;  </div><div class="line">```</div></pre></td></tr></table></figure>
<p>只有在两个元素相等且具有相同的数据类型时，array_intersect()函数才会认为它们是相同的。</p>
<h2 id="7-关联数组的交集-array-intersect-assoc"><a href="#7-关联数组的交集-array-intersect-assoc" class="headerlink" title="7. 关联数组的交集 array_intersect_assoc()"></a>7. 关联数组的交集 array_intersect_assoc()</h2><p>函数array_intersect_assoc()与array_intersect()基本相同，只不过他在比较中还考虑了数组的键。因此，只有在第一个数组中出现，且在所有其他输入数组中也出现的键/值对才返回到结果数组中。<br>形式如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">array array_intersect_assoc(array array1,array array2[,arrayN…])  </div><div class="line">``` </div><div class="line"></div><div class="line">下面的例子返回了出现在<span class="variable">$fruit1</span>数组中，也同时出现在<span class="variable">$fruit2</span>与<span class="variable">$fruit3</span>中的所有键/值对：</div><div class="line"></div><div class="line">``` bash</div><div class="line">&lt;?php  </div><div class="line"><span class="variable">$fruit1</span> = array(<span class="string">"red"</span>=&gt;<span class="string">"Apple"</span>,<span class="string">"yellow"</span>=&gt;<span class="string">"Banana"</span>,<span class="string">"orange"</span>=&gt;<span class="string">"Orange"</span>);  </div><div class="line"><span class="variable">$fruit2</span> = array(<span class="string">"yellow"</span>=&gt;<span class="string">"Pear"</span>,<span class="string">"red"</span>=&gt;<span class="string">"Apple"</span>,<span class="string">"purple"</span>=&gt;<span class="string">"Grape"</span>);  </div><div class="line"><span class="variable">$fruit3</span> = array(<span class="string">"green"</span>=&gt;<span class="string">"Watermelon"</span>,<span class="string">"orange"</span>=&gt;<span class="string">"Orange"</span>,<span class="string">"red"</span>=&gt;<span class="string">"Apple"</span>);  </div><div class="line"><span class="variable">$intersection</span> = array_intersect_assoc(<span class="variable">$fruit1</span>, <span class="variable">$fruit2</span>, <span class="variable">$fruit3</span>);  </div><div class="line">print_r(<span class="variable">$intersection</span>);  </div><div class="line">  </div><div class="line">// output  </div><div class="line">// Array ( [red] =&gt; Apple )  </div><div class="line">?&gt;  </div><div class="line">```</div></pre></td></tr></table></figure>
<h2 id="8-数组的差集-array-diff"><a href="#8-数组的差集-array-diff" class="headerlink" title="8. 数组的差集 array_diff()"></a>8. 数组的差集 array_diff()</h2><p>函数array_diff()返回出现在第一个数组中但其他输入数组中没有的值。这个功能与array_intersect()相反。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">array array_diff(array array1,array array2[,arrayN…])  </div><div class="line">``` </div><div class="line"></div><div class="line">实例如下：</div><div class="line"></div><div class="line">``` bash</div><div class="line">&lt;?php  </div><div class="line"><span class="variable">$fruit1</span> = array(<span class="string">"Apple"</span>,<span class="string">"Banana"</span>,<span class="string">"Orange"</span>);  </div><div class="line"><span class="variable">$fruit2</span> = array(<span class="string">"Pear"</span>,<span class="string">"Apple"</span>,<span class="string">"Grape"</span>);  </div><div class="line"><span class="variable">$fruit3</span> = array(<span class="string">"Watermelon"</span>,<span class="string">"Orange"</span>,<span class="string">"Apple"</span>);  </div><div class="line"><span class="variable">$intersection</span> = array_diff(<span class="variable">$fruit1</span>, <span class="variable">$fruit2</span>, <span class="variable">$fruit3</span>);  </div><div class="line">print_r(<span class="variable">$intersection</span>);  </div><div class="line">  </div><div class="line">// output  </div><div class="line">// Array ( [1] =&gt; Banana )  </div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<h2 id="9-关联数组的差集-array-diff-assoc"><a href="#9-关联数组的差集-array-diff-assoc" class="headerlink" title="9. 关联数组的差集 array_diff_assoc()"></a>9. 关联数组的差集 array_diff_assoc()</h2><p>函数array_diff_assoc()与array_diff()基本相同，只是它在比较时还考虑了数组的键。因此，只在第一个数组中出现而不再其他输入数组中出现的键/值对才会返回到结果数组中。其形式如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">array array_diff_assoc(array array1,array array2[,arrayN…])  </div><div class="line">``` </div><div class="line"></div><div class="line">下面的例子只返回了[yellow] =&gt; Banana,因为这个特殊的键/值对出现在<span class="variable">$fruit1</span>中，而在<span class="variable">$fruit2</span>和<span class="variable">$fruit3</span>中都不存在。</div><div class="line"></div><div class="line">``` bash</div><div class="line">&lt;?php  </div><div class="line"><span class="variable">$fruit1</span> = array(<span class="string">"red"</span>=&gt;<span class="string">"Apple"</span>,<span class="string">"yellow"</span>=&gt;<span class="string">"Banana"</span>,<span class="string">"orange"</span>=&gt;<span class="string">"Orange"</span>);  </div><div class="line"><span class="variable">$fruit2</span> = array(<span class="string">"yellow"</span>=&gt;<span class="string">"Pear"</span>,<span class="string">"red"</span>=&gt;<span class="string">"Apple"</span>,<span class="string">"purple"</span>=&gt;<span class="string">"Grape"</span>);  </div><div class="line"><span class="variable">$fruit3</span> = array(<span class="string">"green"</span>=&gt;<span class="string">"Watermelon"</span>,<span class="string">"orange"</span>=&gt;<span class="string">"Orange"</span>,<span class="string">"red"</span>=&gt;<span class="string">"Apple"</span>);  </div><div class="line"><span class="variable">$intersection</span> = array_diff_assoc(<span class="variable">$fruit1</span>, <span class="variable">$fruit2</span>, <span class="variable">$fruit3</span>);  </div><div class="line">print_r(<span class="variable">$intersection</span>);  </div><div class="line">  </div><div class="line">// output  </div><div class="line">// Array ( [yellow] =&gt; Banana )  </div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<p>使用数组的过程中经常要遍历数组。通常需要遍历数组并获得各个键或值（或者同时获得键和值），所以毫不奇怪，PHP为此提供了一些函数来满足需求。许多函数能完成两项任务，不仅能获取当前指针位置的键或值，还能将指针移向下一个适当的位置。</p>
<h2 id="10-获取当前数组键-key"><a href="#10-获取当前数组键-key" class="headerlink" title="10. 获取当前数组键 key()"></a>10. 获取当前数组键 key()</h2><p>key()函数返回input_array中当前指针所在位置的键。其形式如下<br>：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mixed key(array array)</div></pre></td></tr></table></figure></p>
<p>下面的例子通过迭代处理数组并移动指针来输出$fruits数组的键：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$fruits</span> = array(<span class="string">"apple"</span>=&gt;<span class="string">"red"</span>, <span class="string">"banana"</span>=&gt;<span class="string">"yellow"</span>);  </div><div class="line"><span class="keyword">while</span> (<span class="variable">$key</span> = key(<span class="variable">$fruits</span>)) &#123;  </div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s &lt;br /&gt;"</span>, <span class="variable">$key</span>);  </div><div class="line">    next(<span class="variable">$fruits</span>);  </div><div class="line">&#125;  </div><div class="line">  </div><div class="line">// apple   </div><div class="line">// banana  </div><div class="line">```</div></pre></td></tr></table></figure>
<p>注意，每次调用key()时不会移动指针。为此需要使用next()函数，这个函数的唯一作用就是完成推进指针的任务。</p>
<h2 id="11-获取当前数组值-current"><a href="#11-获取当前数组值-current" class="headerlink" title="11. 获取当前数组值 current()"></a>11. 获取当前数组值 current()</h2><p>current()函数返回数组中当前指针所在位置的数组值。其形式如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">mixed current(array array)  </div><div class="line">``` </div><div class="line"></div><div class="line">下面修改前面的例子，这一次我们要获取数组值：</div><div class="line"></div><div class="line">``` bash</div><div class="line"><span class="variable">$fruits</span> = array(<span class="string">"apple"</span>=&gt;<span class="string">"red"</span>, <span class="string">"banana"</span>=&gt;<span class="string">"yellow"</span>);  </div><div class="line"><span class="keyword">while</span> (<span class="variable">$fruit</span> = current(<span class="variable">$fruits</span>)) &#123;  </div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s &lt;br /&gt;"</span>, <span class="variable">$fruit</span>);  </div><div class="line">    next(<span class="variable">$fruits</span>);  </div><div class="line">&#125;  </div><div class="line">  </div><div class="line">// red   </div><div class="line">// yellow   </div><div class="line">```</div></pre></td></tr></table></figure>
<h2 id="12-获取当前数组键和值-each"><a href="#12-获取当前数组键和值-each" class="headerlink" title="12. 获取当前数组键和值 each()"></a>12. 获取当前数组键和值 each()</h2><p>each()函数返回input_array的当前键/值对，并将指针推进一个位置。其形式如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">array each(array array)  </div><div class="line">``` </div><div class="line">返回的数组包含四个键，键0和key包含键名，而键1和value包含相应的数据。如果执行each()前指针位于数组末尾，则返回<span class="literal">false</span>。</div><div class="line"></div><div class="line">``` bash</div><div class="line"><span class="variable">$fruits</span> = array(<span class="string">"apple"</span>, <span class="string">"banana"</span>, <span class="string">"orange"</span>, <span class="string">"pear"</span>);  </div><div class="line">print_r ( each(<span class="variable">$fruits</span>) );  </div><div class="line">  </div><div class="line">// Array ( [1] =&gt; apple [value] =&gt; apple [0] =&gt; 0 [key] =&gt; 0 )  </div><div class="line">``` </div><div class="line">each() 经常和 list() 结合使用来遍历数组。本例与上例类似，不过循环输出了整个数组：</div><div class="line"></div><div class="line">``` bash</div><div class="line"><span class="variable">$fruits</span> = array(<span class="string">"apple"</span>, <span class="string">"banana"</span>, <span class="string">"orange"</span>, <span class="string">"pear"</span>);  </div><div class="line">reset(<span class="variable">$fruits</span>);  </div><div class="line">  </div><div class="line"><span class="keyword">while</span> (list(<span class="variable">$key</span>, <span class="variable">$val</span>) = each(<span class="variable">$fruits</span>))  </div><div class="line">    &#123;  </div><div class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$key</span> =&gt; <span class="variable">$val</span>&lt;br /&gt;"</span>;  </div><div class="line">    &#125;  </div><div class="line">  </div><div class="line">// 0 =&gt; apple  </div><div class="line">// 1 =&gt; banana  </div><div class="line">// 2 =&gt; orange  </div><div class="line">// 3 =&gt; pear  </div><div class="line">```</div></pre></td></tr></table></figure>
<p>因为将一个数组赋值给另一个数组时会重置原来的数组指针，因此在上例中如果我们在循环内部将 $fruits 赋给了另一个变量的话将会导致无限循环。<br>这就完成了数组的遍历。<br>查找、筛选与搜索数组元素是数组操作的一些常见功能。下面来介绍一下几个相关的函数。 </p>
<h2 id="13-in-array-函数"><a href="#13-in-array-函数" class="headerlink" title="13. in_array()函数"></a>13. in_array()函数</h2><p>in_array()函数在一个数组汇总搜索一个特定值，如果找到这个值返回true，否则返回false。其形式如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">boolean in_array(mixed needle,array haystack[,boolean strict]);  </div><div class="line">``` </div><div class="line"></div><div class="line">来看下面的例子，查找变量apple是否已经在数组中，如果在，则输出一段信息：</div><div class="line"></div><div class="line">``` bash</div><div class="line"><span class="variable">$fruit</span> = <span class="string">"apple"</span>;   </div><div class="line"><span class="variable">$fruits</span> = array(<span class="string">"apple"</span>,<span class="string">"banana"</span>,<span class="string">"orange"</span>,<span class="string">"pear"</span>);   </div><div class="line"><span class="keyword">if</span>( in_array(<span class="variable">$fruit</span>,<span class="variable">$fruits</span>) )    </div><div class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$fruit</span> 已经在数组中"</span>;  </div><div class="line">```</div></pre></td></tr></table></figure>
<p>第三个参数可选，它强制in_array()在搜索时考虑类型。</p>
<h2 id="14-array-key-exists-函数"><a href="#14-array-key-exists-函数" class="headerlink" title="14. array_key_exists()函数"></a>14. array_key_exists()函数</h2><p>如果在一个数组中找到一个指定的键，函数array_key_exists()返回true，否则返回false。其形式如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">boolean array_key_exists(mixed key,array array);</div></pre></td></tr></table></figure>
<p>下面的例子将在数组键中搜索apple，如果找到，将输出这个水果的颜色：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$fruit</span>[<span class="string">"apple"</span>] = <span class="string">"red"</span>;  </div><div class="line"><span class="variable">$fruit</span>[<span class="string">"banana"</span>] = <span class="string">"yellow"</span>;  </div><div class="line"><span class="variable">$fruit</span>[<span class="string">"pear"</span>] = <span class="string">"green"</span>;  </div><div class="line"><span class="keyword">if</span>(array_key_exists(<span class="string">"apple"</span>, <span class="variable">$fruit</span>))&#123;  </div><div class="line">    <span class="built_in">printf</span>(<span class="string">"apple's color is %s"</span>,<span class="variable">$fruit</span>[<span class="string">"apple"</span>]);  </div><div class="line">&#125;  </div><div class="line">  </div><div class="line">//apple<span class="string">'s color is red  </span></div><div class="line"><span class="string">```</span></div></pre></td></tr></table></figure>
<h2 id="15-array-search-函数"><a href="#15-array-search-函数" class="headerlink" title="15. array_search()函数"></a>15. array_search()函数</h2><p>array_search()函数在一个数组中搜索一个指定的值，如果找到则返回相应的键，否则返回false。其形式如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">mixed array_search(mixed needle,array haystack[,boolean strict])  </div><div class="line">``` </div><div class="line"></div><div class="line">下面的例子在<span class="variable">$fruits</span>中搜索一个特定的日期（December 7），如果找到，则返回相应州的有关信息：</div><div class="line"></div><div class="line">``` bash</div><div class="line"><span class="variable">$fruits</span>[<span class="string">"apple"</span>] = <span class="string">"red"</span>;  </div><div class="line"><span class="variable">$fruits</span>[<span class="string">"banana"</span>] = <span class="string">"yellow"</span>;  </div><div class="line"><span class="variable">$fruits</span>[<span class="string">"watermelon"</span>]=<span class="string">"green"</span>;  </div><div class="line"><span class="variable">$founded</span> = array_search(<span class="string">"green"</span>, <span class="variable">$fruits</span>);  </div><div class="line"><span class="keyword">if</span>(<span class="variable">$founded</span>)   </div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s was founded on %s."</span>,<span class="variable">$founded</span>, <span class="variable">$fruits</span>[<span class="variable">$founded</span>]);  </div><div class="line">  </div><div class="line">//watermelon was founded on green.  </div><div class="line">```</div></pre></td></tr></table></figure>
<h2 id="16-array-keys-函数"><a href="#16-array-keys-函数" class="headerlink" title="16. array_keys()函数"></a>16. array_keys()函数</h2><p>array_keys()函数返回一个数组，其中包含所搜索数组中找到的所有键。其形式如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">array array_keys(array array[,mixed search_value])  </div><div class="line">```</div></pre></td></tr></table></figure>
<p>如果包含可选参数search_value，则只会返回与该值匹配的键。下面的例子将输出$fruit数组中找到的所有数组：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$fruits</span>[<span class="string">"apple"</span>] = <span class="string">"red"</span>;  </div><div class="line"><span class="variable">$fruits</span>[<span class="string">"banana"</span>] = <span class="string">"yellow"</span>;  </div><div class="line"><span class="variable">$fruits</span>[<span class="string">"watermelon"</span>]=<span class="string">"green"</span>;  </div><div class="line"><span class="variable">$keys</span> = array_keys(<span class="variable">$fruits</span>);  </div><div class="line">print_r(<span class="variable">$keys</span>);  </div><div class="line">  </div><div class="line">//Array ( [0] =&gt; apple [1] =&gt; banana [2] =&gt; watermelon )  </div><div class="line">```</div></pre></td></tr></table></figure>
<h2 id="17-array-values-函数"><a href="#17-array-values-函数" class="headerlink" title="17. array_values()函数"></a>17. array_values()函数</h2><p>array_values()函数返回一个数组中的所有值，并自动为返回的数组提供数值索引。其形式如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">array array_values(array array)  </div><div class="line">```</div></pre></td></tr></table></figure>
<p>下面的例子将获取$fruits中找到的各元素的值：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$fruits</span>[<span class="string">"apple"</span>] = <span class="string">"red"</span>;  </div><div class="line"><span class="variable">$fruits</span>[<span class="string">"banana"</span>] = <span class="string">"yellow"</span>;  </div><div class="line"><span class="variable">$fruits</span>[<span class="string">"watermelon"</span>]=<span class="string">"green"</span>;  </div><div class="line"><span class="variable">$values</span> = array_values(<span class="variable">$fruits</span>);  </div><div class="line">print_r(<span class="variable">$values</span>);  </div><div class="line">  </div><div class="line">//Array ( [0] =&gt; red [1] =&gt; yellow [2] =&gt; green )  </div><div class="line">```</div></pre></td></tr></table></figure>
<p>有时候我们需要扩展一个数组，或者删掉数组的一部分，PHP为扩展和缩小数组提供了一些函数。对于那些希望模仿各种队列实现（FIFO、LIFO） 的程序员来说，这些函数可以提供便利。顾名思义，从这些函数的函数名（push、pop、shift和unshift）就清楚地反映出其作用。<br>PS：传统的队列是一种数据结构，删除元素与加入元素的顺序相同，就称为先进先出，或FIFO。相反，栈是另外一种数据结构，其中删除元素的顺序与加入时的顺序相反，这成为后进先出，或LIFO。</p>
<h2 id="18-在数组头添加元素"><a href="#18-在数组头添加元素" class="headerlink" title="18. 在数组头添加元素"></a>18. 在数组头添加元素</h2><p>array_unshift()函数在数组头添加元素。所有己有的数值键都会相应地修改，以反映其在数组中的新位置，但是关联键不受影响。其形式如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">int array_unshift(array array,mixed variable[,mixed variable])  </div><div class="line">```</div></pre></td></tr></table></figure>
<p>下面这个例子在$fruits数组前面添加了两种水果：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$fruits</span> = array(<span class="string">"apple"</span>,<span class="string">"banana"</span>);  </div><div class="line">array_unshift(<span class="variable">$fruits</span>,<span class="string">"orange"</span>,<span class="string">"pear"</span>)  </div><div class="line">// <span class="variable">$fruits</span> = array(<span class="string">"orange"</span>,<span class="string">"pear"</span>,<span class="string">"apple"</span>,<span class="string">"banana"</span>);  </div><div class="line">```</div></pre></td></tr></table></figure>
<h2 id="19-在数组尾添加元素"><a href="#19-在数组尾添加元素" class="headerlink" title="19. 在数组尾添加元素"></a>19. 在数组尾添加元素</h2><p>array_push()函数的返回值是int型，是压入数据后数组中元素的个数，可以为此函数传递多个变量作为参数，同时向数组压入多个变量。其形式为：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">(array array,mixed variable [,mixed variable...])  </div><div class="line">``` </div><div class="line"></div><div class="line">下面这个例子在<span class="variable">$fruits</span>数组中又添加了两个水果：</div><div class="line"></div><div class="line">``` bash</div><div class="line"><span class="variable">$fruits</span> = array(<span class="string">"apple"</span>,<span class="string">"banana"</span>);  </div><div class="line">array_push(<span class="variable">$fruits</span>,<span class="string">"orange"</span>,<span class="string">"pear"</span>)  </div><div class="line">//<span class="variable">$fruits</span> = array(<span class="string">"apple"</span>,<span class="string">"banana"</span>,<span class="string">"orange"</span>,<span class="string">"pear"</span>)  </div><div class="line">```</div></pre></td></tr></table></figure>
<h2 id="20-从数组头删除值"><a href="#20-从数组头删除值" class="headerlink" title="20. 从数组头删除值"></a>20. 从数组头删除值</h2><p>array_shift()函数删除并返回数组中找到的元素。其结果是，如果使用的是数值健，则所有相应的值都会下移，而使用关联键的数组不受影响。其形式为:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mixed array_shift(array array)  </div><div class="line">```</div></pre></td></tr></table></figure>
<p>下面的例子删除了$fruits数组中的第一个元素apple：</p>
<pre><code class="bash"><span class="variable">$fruits</span> = array(<span class="string">"apple"</span>,<span class="string">"banana"</span>,<span class="string">"orange"</span>,<span class="string">"pear"</span>);  
<span class="variable">$fruit</span> = array_shift(<span class="variable">$fruits</span>);  
// <span class="variable">$fruits</span> = array(<span class="string">"banana"</span>,<span class="string">"orange"</span>,<span class="string">"pear"</span>)  
// <span class="variable">$fruit</span> = <span class="string">"apple"</span>;
</code></pre>
<h2 id="21-从数组尾删除元素"><a href="#21-从数组尾删除元素" class="headerlink" title="21. 从数组尾删除元素"></a>21. 从数组尾删除元素</h2><p>array_pop()函数删除并返回数组的最后一个元素。其形式为：</p>
<pre><code class="bash">mixed array_pop(aray target_array);
</code></pre>
<p>下面的例子从$states数组删除了最后的一个州：</p>
<pre><code class="bash"><span class="variable">$fruits</span> = array(<span class="string">"apple"</span>,<span class="string">"banana"</span>,<span class="string">"orange"</span>,<span class="string">"pear"</span>);  
<span class="variable">$fruit</span> = array_pop(<span class="variable">$fruits</span>);  
//<span class="variable">$fruits</span> = array(<span class="string">"apple"</span>,<span class="string">"banana"</span>,<span class="string">"orange"</span>);  
//<span class="variable">$fruit</span> = <span class="string">"pear"</span>;
</code></pre>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;数组的合并，追加，删除，拆分，查找等&lt;/p&gt;
&lt;h2 id=&quot;1-合并数组&quot;&gt;&lt;a href=&quot;#1-合并数组&quot; class=&quot;headerlink&quot; title=&quot;1. 合并数组&quot;&gt;&lt;/a&gt;1. 合并数组&lt;/h2&gt;&lt;p&gt;array_merge()函数将数组合并到一起，返回一个联合的数组。所得到的数组以第一个输入数组参数开始，按后面数组参数出现的顺序依次迫加。其形式为：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;array array_merge (array array1 array2…,arrayN)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://weibo.com/categories/PHP/"/>
    
    
  </entry>
  
  <entry>
    <title>npm模块安装问题</title>
    <link href="http://weibo.com/2018/03/01/npm%E6%A8%A1%E5%9D%97%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98/"/>
    <id>http://weibo.com/2018/03/01/npm模块安装问题/</id>
    <published>2018-03-01T04:31:39.000Z</published>
    <updated>2018-12-14T09:48:25.166Z</updated>
    
    <content type="html"><![CDATA[<p>使用npm进行模块安装</p>
<h2 id="安装命令"><a href="#安装命令" class="headerlink" title="安装命令"></a>安装命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install formidable</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="问题：执行命令目录不正确-找不到package-json"><a href="#问题：执行命令目录不正确-找不到package-json" class="headerlink" title="问题：执行命令目录不正确 / 找不到package.json"></a>问题：执行命令目录不正确 / 找不到package.json</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">`-- formidable@1.0.17</div><div class="line"></div><div class="line">npm WARN enoent ENOENT: no such file or directory, open <span class="string">'C:\Users\xxxx\package.json'</span></div><div class="line">npm WARN Neil No description</div><div class="line">npm WARN Neil No repository field.</div><div class="line">npm WARN Neil No README data</div><div class="line">npm WARN Neil No license field.</div></pre></td></tr></table></figure>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>切换<code>npm</code>目录<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">C:\Users\xxxx&gt;<span class="built_in">cd</span> C:\Program Files\nodejs\node_modules\npm</div></pre></td></tr></table></figure></p>
<h2 id="解决办法-1"><a href="#解决办法-1" class="headerlink" title="解决办法"></a>解决办法</h2><p>初始化生成<code>package.json</code>文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g</div></pre></td></tr></table></figure>
<h2 id="问题：无相关权限"><a href="#问题：无相关权限" class="headerlink" title="问题：无相关权限"></a>问题：无相关权限</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">npm ERR! Windows_NT 10.0.14393</div><div class="line">npm ERR! argv <span class="string">"C:\\Program Files\\nodejs\\node.exe"</span> <span class="string">"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js"</span> <span class="string">"install"</span> <span class="string">"formidable"</span></div><div class="line">npm ERR! node v6.2.0</div><div class="line">npm ERR! npm  v3.8.9</div><div class="line">npm ERR! path C:\Program Files\nodejs\node_modules\npm\node_modules\.staging</div><div class="line">npm ERR! code EPERM</div><div class="line">npm ERR! errno -4048</div><div class="line">npm ERR! syscall mkdir</div><div class="line"></div><div class="line">npm ERR! Error: EPERM: operation not permitted, mkdir <span class="string">'C:\Program Files\nodejs\node_modules\npm\node_modules\.staging'</span></div><div class="line">npm ERR!     at Error (native)</div><div class="line">......</div></pre></td></tr></table></figure>
<h2 id="解决办法-2"><a href="#解决办法-2" class="headerlink" title="解决办法"></a>解决办法</h2><p>1、打开对应目录<br>C:\Windows\System32</p>
<p>2、以管理员身份运行<br>cmd.exe</p>
<p>3、输入 <code>npm install formidable</code> 命令，等待提示安装成功<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">C:\Program Files\nodejs\node_modules\npm&gt;npm install formidable</div><div class="line">npm@3.8.9 C:\Program Files\nodejs\node_modules\npm</div><div class="line">`-- formidable@1.0.17  extraneous</div></pre></td></tr></table></figure></p>
<h2 id="问题：重命名文件名异常"><a href="#问题：重命名文件名异常" class="headerlink" title="问题：重命名文件名异常"></a>问题：重命名文件名异常</h2><p>源码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var form = new formidable.IncomingForm();</div><div class="line">  form.parse(request, <span class="keyword">function</span>(error, fields, files) &#123;</div><div class="line">    fs.renameSync(files.upload.path, <span class="string">"/tmp/test.png"</span>);</div></pre></td></tr></table></figure></p>
<p>异常<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">  <span class="built_in">return</span> binding.rename(pathModule._makeLong(oldPath),</div><div class="line">                 ^</div><div class="line"></div><div class="line">Error: EXDEV: cross-device link not permitted, rename <span class="string">'C:\Users\xxxx\AppData\Local\Temp\upload_e835305b073c34bf9219b7d0290fad46'</span> -&gt; <span class="string">'E:\tmp\test.png'</span></div><div class="line">    at Error (native)</div><div class="line">    at Object.fs.renameSync (fs.js:803:18)</div></pre></td></tr></table></figure></p>
<h2 id="解决办法-3"><a href="#解决办法-3" class="headerlink" title="解决办法"></a>解决办法</h2><p>指定form上传路径，默认指向系统盘<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var form = new formidable.IncomingForm();</div><div class="line">form.uploadDir=<span class="string">'tmp'</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用npm进行模块安装&lt;/p&gt;
&lt;h2 id=&quot;安装命令&quot;&gt;&lt;a href=&quot;#安装命令&quot; class=&quot;headerlink&quot; title=&quot;安装命令&quot;&gt;&lt;/a&gt;安装命令&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install formidable&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="npm" scheme="http://weibo.com/categories/npm/"/>
    
    
  </entry>
  
  <entry>
    <title>原生js合并两个数组以及call,apply,bind</title>
    <link href="http://weibo.com/2018/02/15/%E5%8E%9F%E7%94%9Fjs%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E4%BB%A5%E5%8F%8Acall-apply-bind/"/>
    <id>http://weibo.com/2018/02/15/原生js合并两个数组以及call-apply-bind/</id>
    <published>2018-02-15T05:06:29.000Z</published>
    <updated>2018-12-14T09:47:58.477Z</updated>
    
    <content type="html"><![CDATA[<h2 id="js合并两个数组"><a href="#js合并两个数组" class="headerlink" title="js合并两个数组"></a>js合并两个数组</h2><p>如：<br>var a = [1,2,3];<br>var b = [4,5,6];</p>
<h3 id="1、concat"><a href="#1、concat" class="headerlink" title="1、concat"></a>1、concat</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var c = a.concat(b); //c=[1,2,3,4,5,6]</div></pre></td></tr></table></figure>
<p>问题：concat方法连接a、b两个数组后，a、b两个数组的数据不变，同时会返回一个新的数组。这样当我们需要进行多次的数组合并时，会造成很大的内存浪费<br><a id="more"></a></p>
<h3 id="2、for循环"><a href="#2、for循环" class="headerlink" title="2、for循环"></a>2、for循环</h3><p>遍历其中一个数组，把该数组中的所有元素依次添加到另外一个数组中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(var i <span class="keyword">in</span> b) &#123;</div><div class="line">    a.push(b[i]);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="3、apply"><a href="#3、apply" class="headerlink" title="3、apply"></a>3、apply</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">push.apply(a,b)   等同于  a.push.apply(a,[4,5,6])</div></pre></td></tr></table></figure>
<h3 id="4、说明："><a href="#4、说明：" class="headerlink" title="4、说明："></a>4、说明：</h3><p>1）以上3种合并方法并没有考虑过a、b两个数组谁的长度更小。<br>2）所以好的做法是预先判断a、b两个数组哪个更大，然后使用大数组合并小数组，这样就减少了数组元素操作的次数！<br>3）有时候我们不希望原数组（a、b）改变，这时就只能使用concat了。</p>
<h2 id="call-apply-bind"><a href="#call-apply-bind" class="headerlink" title="call(), apply(), bind()"></a>call(), apply(), bind()</h2><h3 id="示例1："><a href="#示例1：" class="headerlink" title="示例1："></a>示例1：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">var name=<span class="string">'zhang'</span>,age=17;</div><div class="line">var obj = &#123;</div><div class="line">    name: <span class="string">'hong'</span>,</div><div class="line">    objAge: this.age,</div><div class="line">    myFun: <span class="function"><span class="title">function</span></span>()&#123;</div><div class="line">        console.log(this.name+<span class="string">','</span>+this.age);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">obj.objAge;  //17</div><div class="line">obj.myFun()  //hong,undefined</div></pre></td></tr></table></figure>
<h3 id="示例2："><a href="#示例2：" class="headerlink" title="示例2："></a>示例2：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">var name = <span class="string">'yuan'</span>;</div><div class="line"><span class="keyword">function</span> <span class="function"><span class="title">show</span></span>()&#123;</div><div class="line">    console.log(this.name);</div><div class="line">&#125;</div><div class="line"></div><div class="line">show() //yuan</div></pre></td></tr></table></figure>
<h4 id="比较一下这两者this-的差别，第一个this指向obj，第二个全局声明的shows-函数this是window"><a href="#比较一下这两者this-的差别，第一个this指向obj，第二个全局声明的shows-函数this是window" class="headerlink" title="比较一下这两者this 的差别，第一个this指向obj，第二个全局声明的shows()函数this是window;"></a>比较一下这两者this 的差别，第一个this指向obj，第二个全局声明的shows()函数this是window;</h4><h3 id="call-、apply-、bind-都是用来重定义-this这个对象的"><a href="#call-、apply-、bind-都是用来重定义-this这个对象的" class="headerlink" title="call()、apply()、bind() 都是用来重定义 this这个对象的"></a>call()、apply()、bind() 都是用来重定义 this这个对象的</h3><p>如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">var name=<span class="string">'zhang'</span>,age=17;</div><div class="line">var obj = &#123;</div><div class="line">    name: <span class="string">'hong'</span>,</div><div class="line">    objAge: this.age,</div><div class="line">    myFun: <span class="function"><span class="title">function</span></span>()&#123;</div><div class="line">        console.log(this.name+<span class="string">','</span>+this.age);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">var db = &#123;</div><div class="line">    name: <span class="string">'yuan'</span>,</div><div class="line">    age: 20</div><div class="line">&#125;</div><div class="line"></div><div class="line">obj.myFun.call(db)；　　　//yuan,20</div><div class="line">obj.myFun.apply(db);　　　//yuan,20</div><div class="line">obj.myFun.bind(db)();　　 //yuan,20</div></pre></td></tr></table></figure></p>
<p>以上出了bind方法后面多了个()外 ，结果返回都一致。<br>由此得出结论，bind返回的是一个新的函数，你必须调用它才会被执行。</p>
<h3 id="对比call-、bind-、-apply-传参情况下"><a href="#对比call-、bind-、-apply-传参情况下" class="headerlink" title="对比call 、bind 、 apply 传参情况下"></a>对比call 、bind 、 apply 传参情况下</h3><p>如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">var name=<span class="string">'zhang'</span>,age=17;</div><div class="line">var obj = &#123;</div><div class="line">    name: <span class="string">'hong'</span>,</div><div class="line">    objAge: this.age,</div><div class="line">    myFun: <span class="keyword">function</span>(fm,t)&#123;</div><div class="line">        console.log(this.name+<span class="string">', '</span>+this.age+<span class="string">', '</span>+fm+<span class="string">'&amp;&amp;'</span>+t);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">var db = &#123;</div><div class="line">    name: <span class="string">'yuan'</span>,</div><div class="line">    age: 20</div><div class="line">&#125;</div><div class="line"></div><div class="line">obj.myFun.call(db,<span class="string">'one'</span>,<span class="string">'two'</span>)；　　　//yuan, 20, one&amp;&amp;two</div><div class="line">obj.myFun.apply(db,[<span class="string">'one'</span>,<span class="string">'two'</span>]);　　　//yuan, 20, one&amp;&amp;two</div><div class="line">obj.myFun.bind(db,<span class="string">'one'</span>,<span class="string">'two'</span>)();　　 //yuan, 20, one&amp;&amp;two</div><div class="line">obj.myFun.bind(db,[<span class="string">'one'</span>,<span class="string">'two'</span>])();　　 //yuan, 20, one,two&amp;&amp;undefined</div></pre></td></tr></table></figure></p>
<p>从上面四个结果不难看出call 、bind 、 apply这三个函数的第一个参数都是this的指向对象，第二个参数差别就来了：<br>call的参数是直接放进去的，第二、第三、第n个参数全都用逗号分隔，直接放到后面  obj.myFun.call(db,’one’, … ,’string’ );<br>apply的所有参数都必须放在一个数组里面传进去obj.myFun.apply(db,[‘one’, …, ‘string’ ]);<br>bind除了返回是函数以外，它的参数和call一样。<br>当然，三者的参数不限定是string类型，允许是各种类型，包括函数 、 object 等等。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;js合并两个数组&quot;&gt;&lt;a href=&quot;#js合并两个数组&quot; class=&quot;headerlink&quot; title=&quot;js合并两个数组&quot;&gt;&lt;/a&gt;js合并两个数组&lt;/h2&gt;&lt;p&gt;如：&lt;br&gt;var a = [1,2,3];&lt;br&gt;var b = [4,5,6];&lt;/p&gt;
&lt;h3 id=&quot;1、concat&quot;&gt;&lt;a href=&quot;#1、concat&quot; class=&quot;headerlink&quot; title=&quot;1、concat&quot;&gt;&lt;/a&gt;1、concat&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;var c = a.concat(b); //c=[1,2,3,4,5,6]&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;问题：concat方法连接a、b两个数组后，a、b两个数组的数据不变，同时会返回一个新的数组。这样当我们需要进行多次的数组合并时，会造成很大的内存浪费&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://weibo.com/categories/JavaScript/"/>
    
    
  </entry>
  
  <entry>
    <title>原生js去重的方法</title>
    <link href="http://weibo.com/2018/02/14/%E5%8E%9F%E7%94%9Fjs%E5%8E%BB%E9%87%8D%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://weibo.com/2018/02/14/原生js去重的方法/</id>
    <published>2018-02-14T12:22:47.000Z</published>
    <updated>2018-12-14T09:47:28.022Z</updated>
    
    <content type="html"><![CDATA[<p>主要写一下前端面试中经常会面到的一个题目，不过在实际开发过程中很少使用原生js去重。<br><a id="more"></a></p>
<h2 id="方法1：循环，比对"><a href="#方法1：循环，比对" class="headerlink" title="方法1：循环，比对"></a>方法1：循环，比对</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">var s = ary.join(<span class="string">","</span>)+<span class="string">","</span>;</div><div class="line"><span class="keyword">for</span>(var i=0;i&lt;ary.length;i++)&#123;</div><div class="line">    <span class="keyword">if</span>(s.replace(ary[i]+<span class="string">","</span>,<span class="string">""</span>).indexOf(ary[i]+<span class="string">","</span>)&gt;-1)&#123;</div><div class="line">        alert(<span class="string">"数组中有重复元素："</span>+ary[i])</div><div class="line">        <span class="built_in">break</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="方法2：排序，循环，比对"><a href="#方法2：排序，循环，比对" class="headerlink" title="方法2：排序，循环，比对"></a>方法2：排序，循环，比对</h2><p>sort() : 返回一个元素已经进行了排序的 Array 对象<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">var ary = new Array(<span class="string">"111"</span>,<span class="string">"22"</span>,<span class="string">"33"</span>,<span class="string">"111"</span>);</div><div class="line">var nary = ary.sort();</div><div class="line"><span class="keyword">for</span>(var i=0;i&lt;ary.length;i++)&#123;</div><div class="line">    <span class="keyword">if</span> (nary[i]==nary[i+1])&#123;</div><div class="line">        alert(<span class="string">"数组重复内容："</span>+nary[i]);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="方法3：定义函数"><a href="#方法3：定义函数" class="headerlink" title="方法3：定义函数"></a>方法3：定义函数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">function</span> isRepeat(arr)&#123;</div><div class="line">    var <span class="built_in">hash</span> = &#123;&#125;;</div><div class="line">    <span class="keyword">for</span>(var i <span class="keyword">in</span> arr) &#123;</div><div class="line">        <span class="keyword">if</span>(<span class="built_in">hash</span>[arr[i]])</div><div class="line">        <span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">        <span class="built_in">hash</span>[arr[i]] = <span class="literal">true</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;主要写一下前端面试中经常会面到的一个题目，不过在实际开发过程中很少使用原生js去重。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://weibo.com/categories/JavaScript/"/>
    
    
  </entry>
  
  <entry>
    <title>原生js实现拖拽功能</title>
    <link href="http://weibo.com/2018/02/03/%E5%8E%9F%E7%94%9Fjs%E5%AE%9E%E7%8E%B0%E6%8B%96%E6%8B%BD%E5%8A%9F%E8%83%BD/"/>
    <id>http://weibo.com/2018/02/03/原生js实现拖拽功能/</id>
    <published>2018-02-03T04:17:52.000Z</published>
    <updated>2018-12-14T09:46:48.039Z</updated>
    
    <content type="html"><![CDATA[<p>想要实现拖拽，那么必须使用三个事件，并且这三个事件的使用顺序必须是down，move，up。<br>onmousedown：按下事件<br>onmousemove：移动事件<br>onmouseup：抬起事件<br>基本原理:<br>鼠标左键按下的状态下,根据鼠标的移动来移动被拖拽的元素。<br>鼠标的移动也就是x、y坐标的变化;<br>元素的移动就是style.position的top和left的改变。<br><a id="more"></a><br>基本思路：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">拖拽状态 = 0鼠标在元素上按下的时候&#123;    </div><div class="line">    拖拽状态 = 1    </div><div class="line">    记录下鼠标的x和y坐标    </div><div class="line">    记录下元素的x和y坐标    </div><div class="line">&#125;</div><div class="line">鼠标在元素上移动的时候&#123;    </div><div class="line">    如果拖拽状态是0就什么也不做。    </div><div class="line">    如果拖拽状态是1，那么    </div><div class="line">    元素y = 现在鼠标y - 原来鼠标y + 原来元素y    </div><div class="line">    元素x = 现在鼠标x - 原来鼠标x + 原来元素x    </div><div class="line">&#125;     </div><div class="line">鼠标在任何时候放开的时候&#123;    </div><div class="line">    拖拽状态 = 0    </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a>HTML代码</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;div class=<span class="string">"calculator"</span> id=<span class="string">"drag"</span>&gt;**********&lt;/div&gt;</div></pre></td></tr></table></figure>
<h4 id="CSS代码"><a href="#CSS代码" class="headerlink" title="CSS代码"></a>CSS代码</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">.calculator &#123;</div><div class="line">    position: absolute; /*设置绝对定位，脱离文档流，便于拖拽*/</div><div class="line">    display: block;</div><div class="line">    width: 218px;</div><div class="line">    height: 280px;</div><div class="line">    cursor: move;   /*鼠标呈拖拽状*/</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="JS代码"><a href="#JS代码" class="headerlink" title="JS代码"></a>JS代码</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">window.onload = <span class="function"><span class="title">function</span></span>() &#123;</div><div class="line">    //拖拽功能(主要是触发三个事件：onmousedown\onmousemove\onmouseup)</div><div class="line">    var drag = document.getElementById(<span class="string">'drag'</span>);</div><div class="line"> </div><div class="line">    //点击某物体时，用drag对象即可，move和up是全局区域，也就是整个文档通用，应该使用document对象而不是drag对象(否则，采用drag对象时物体只能往右方或下方移动)</div><div class="line">    drag.onmousedown = <span class="keyword">function</span>(e) &#123;</div><div class="line">        var e = e || window.event; //兼容ie浏览器</div><div class="line">        var diffX = e.clientX - drag.offsetLeft; //鼠标点击物体那一刻相对于物体左侧边框的距离=点击时的位置相对于浏览器最左边的距离-物体左边框相对于浏览器最左边的距离</div><div class="line">        var diffY = e.clientY - drag.offsetTop;</div><div class="line"> </div><div class="line">        /*低版本ie bug:物体被拖出浏览器可是窗口外部时，还会出现滚动条，</div><div class="line">            解决方法是采用ie浏览器独有的2个方法setCapture()\releaseCapture(),这两个方法，</div><div class="line">            可以让鼠标滑动到浏览器外部也可以捕获到事件，而我们的bug就是当鼠标移出浏览器的时候，</div><div class="line">            限制超过的功能就失效了。用这个方法，即可解决这个问题。注：这两个方法用于onmousedown和onmouseup中*/</div><div class="line">            <span class="keyword">if</span>(typeof drag.setCapture!=<span class="string">'undefined'</span>)&#123;</div><div class="line">                drag.setCapture();</div><div class="line">            &#125;</div><div class="line"> </div><div class="line">        document.onmousemove = <span class="keyword">function</span>(e) &#123;</div><div class="line">            var e = e || window.event; //兼容ie浏览器</div><div class="line">            var left=e.clientX-diffX;</div><div class="line">            var top=e.clientY-diffY;</div><div class="line"> </div><div class="line">            //控制拖拽物体的范围只能在浏览器视窗内，不允许出现滚动条</div><div class="line">            <span class="keyword">if</span>(left&lt;0)&#123;</div><div class="line">                left=0;</div><div class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(left &gt;window.innerWidth-drag.offsetWidth)&#123;</div><div class="line">                left = window.innerWidth-drag.offsetWidth;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(top&lt;0)&#123;</div><div class="line">                top=0;</div><div class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(top &gt;window.innerHeight-drag.offsetHeight)&#123;</div><div class="line">                top = window.innerHeight-drag.offsetHeight;</div><div class="line">            &#125;</div><div class="line"> </div><div class="line">            //移动时重新得到物体的距离，解决拖动时出现晃动的现象</div><div class="line">            drag.style.left = left+ <span class="string">'px'</span>;</div><div class="line">            drag.style.top = top + <span class="string">'px'</span>;</div><div class="line">        &#125;;</div><div class="line">        document.onmouseup = <span class="keyword">function</span>(e) &#123; //当鼠标弹起来的时候不再移动</div><div class="line">            this.onmousemove = null;</div><div class="line">            this.onmouseup = null; //预防鼠标弹起来后还会循环（即预防鼠标放上去的时候还会移动）</div><div class="line"> </div><div class="line">            //修复低版本ie bug</div><div class="line">            <span class="keyword">if</span>(typeof drag.releaseCapture!=<span class="string">'undefined'</span>)&#123;</div><div class="line">                drag.releaseCapture();</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">    &#125;;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;想要实现拖拽，那么必须使用三个事件，并且这三个事件的使用顺序必须是down，move，up。&lt;br&gt;onmousedown：按下事件&lt;br&gt;onmousemove：移动事件&lt;br&gt;onmouseup：抬起事件&lt;br&gt;基本原理:&lt;br&gt;鼠标左键按下的状态下,根据鼠标的移动来移动被拖拽的元素。&lt;br&gt;鼠标的移动也就是x、y坐标的变化;&lt;br&gt;元素的移动就是style.position的top和left的改变。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://weibo.com/categories/JavaScript/"/>
    
    
  </entry>
  
  <entry>
    <title>常见的浏览器User-Agent</title>
    <link href="http://weibo.com/2018/01/25/%E5%B8%B8%E8%A7%81%E7%9A%84%E6%B5%8F%E8%A7%88%E5%99%A8User-Agent/"/>
    <id>http://weibo.com/2018/01/25/常见的浏览器User-Agent/</id>
    <published>2018-01-25T02:58:01.000Z</published>
    <updated>2018-12-14T09:46:26.106Z</updated>
    
    <content type="html"><![CDATA[<p>UserAgent中文名为用户代理，是Http协议中的一部分，属于头域的组成部分，简称UA。<br>向访问网站提供你所使用的浏览器类型及版本、操作系统及版本、浏览器内核、等信息。<br>通过UA，用户所访问的网站可以显示不同的排版。<br>浏览器的UA字串的标准格式：浏览器标识(操作系统标识;加密等级标识;浏览器语言)渲染引擎标识版本信息。<br><a id="more"></a></p>
<h2 id="1、浏览器标识"><a href="#1、浏览器标识" class="headerlink" title="1、浏览器标识"></a>1、浏览器标识</h2><p>出于兼容及推广等目的，很多浏览器的标识相同，因此浏览器标识并不能说明浏览器的真实版本，真实版本信息在UA字串尾部可以找到。</p>
<h2 id="2、操作系统标识"><a href="#2、操作系统标识" class="headerlink" title="2、操作系统标识"></a>2、操作系统标识</h2><p>FreeBSD<br>X11;FreeBSD(version no.)i386<br>X11;FreeBSD(version no.)AMD64</p>
<p>Linux<br>X11;Linux ppc<br>X11;Linux ppc64<br>X11;Linux i686<br>X11;Linux x86_64</p>
<p>Mac<br>Macintosh;PPC Mac OS X<br>Macintosh;Intel Mac OS X</p>
<p>Solaris<br>X11;SunOS i86pc<br>X11;SunOs sun4u</p>
<p>Windows<br>Windows NT 6.1   对应windows7<br>Windows NT 6.0   对应windows Vista<br>Windows NT 5.2  对应windows 2003<br>Windows NT 5.1   对应windows xp<br>Windows NT 5.0   对应windows 2000<br>Windows ME<br>Windows 98</p>
<h2 id="3、加密等级标识"><a href="#3、加密等级标识" class="headerlink" title="3、加密等级标识"></a>3、加密等级标识</h2><p>N:表示无安全加密<br>I:表示弱安全加密<br>U:表示强安全加密</p>
<h2 id="4、浏览器语言"><a href="#4、浏览器语言" class="headerlink" title="4、浏览器语言"></a>4、浏览器语言</h2><p>在首选项&gt;常规&gt;语言中指定的语言</p>
<h2 id="5、渲染引擎"><a href="#5、渲染引擎" class="headerlink" title="5、渲染引擎"></a>5、渲染引擎</h2><p>显示浏览器使用的主流渲染引擎有：Gecko、WebKit、KHTML、Presto、Trident、Tasman等，格式为：渲染引擎/版本信息</p>
<h2 id="6、版本信息"><a href="#6、版本信息" class="headerlink" title="6、版本信息"></a>6、版本信息</h2><p>显示浏览器的真实版本信息，格式为：浏览器/版本信息</p>
<p>###浏览器User-Agent的详细信息</p>
<p>PC端：<br>safari5.1–MAC<br>User-Agent:Mozilla/5.0(Macintosh;U;IntelMacOSX10_6_8;en-us)AppleWebKit/534.50(KHTML,likeGecko)Version/5.1Safari/534.50</p>
<p>safari5.1–Windows<br>User-Agent:Mozilla/5.0(Windows;U;WindowsNT6.1;en-us)AppleWebKit/534.50(KHTML,likeGecko)Version/5.1Safari/534.50</p>
<p>IE9.0<br>User-Agent:Mozilla/5.0(compatible;MSIE9.0;WindowsNT6.1;Trident/5.0;</p>
<p>IE8.0<br>User-Agent:Mozilla/4.0(compatible;MSIE8.0;WindowsNT6.0;Trident/4.0)</p>
<p>IE7.0<br>User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT6.0)</p>
<p>IE6.0<br>User-Agent:Mozilla/4.0(compatible;MSIE6.0;WindowsNT5.1)</p>
<p>Firefox4.0.1–MAC<br>User-Agent:Mozilla/5.0(Macintosh;IntelMacOSX10.6;rv:2.0.1)Gecko/20100101Firefox/4.0.1</p>
<p>Firefox4.0.1–Windows<br>User-Agent:Mozilla/5.0(WindowsNT6.1;rv:2.0.1)Gecko/20100101Firefox/4.0.1</p>
<p>Opera11.11–MAC<br>User-Agent:Opera/9.80(Macintosh;IntelMacOSX10.6.8;U;en)Presto/2.8.131Version/11.11</p>
<p>Opera11.11–Windows<br>User-Agent:Opera/9.80(WindowsNT6.1;U;en)Presto/2.8.131Version/11.11</p>
<p>Chrome17.0–MAC<br>User-Agent:Mozilla/5.0(Macintosh;IntelMacOSX10_7_0)AppleWebKit/535.11(KHTML,likeGecko)Chrome/17.0.963.56Safari/535.11</p>
<p>傲游（Maxthon）<br>User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT5.1;Maxthon2.0)</p>
<p>腾讯TT<br>User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT5.1;TencentTraveler4.0)</p>
<p>世界之窗（TheWorld）2.x<br>User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT5.1)</p>
<p>世界之窗（TheWorld）3.x<br>User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT5.1;TheWorld)</p>
<p>搜狗浏览器1.x<br>User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT5.1;Trident/4.0;SE2.XMetaSr1.0;SE2.XMetaSr1.0;.NETCLR2.0.50727;SE2.XMetaSr1.0)</p>
<p>360浏览器<br>User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT5.1;360SE)</p>
<p>Avant<br>User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT5.1;AvantBrowser)</p>
<p>GreenBrowser<br>User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT5.1)</p>
<p>移动设备端：</p>
<p>safariiOS4.33–iPhone<br>User-Agent:Mozilla/5.0(iPhone;U;CPUiPhoneOS4_3_3likeMacOSX;en-us)AppleWebKit/533.17.9(KHTML,likeGecko)Version/5.0.2Mobile/8J2Safari/6533.18.5</p>
<p>safariiOS4.33–iPodTouch<br>User-Agent:Mozilla/5.0(iPod;U;CPUiPhoneOS4_3_3likeMacOSX;en-us)AppleWebKit/533.17.9(KHTML,likeGecko)Version/5.0.2Mobile/8J2Safari/6533.18.5</p>
<p>safariiOS4.33–iPad<br>User-Agent:Mozilla/5.0(iPad;U;CPUOS4_3_3likeMacOSX;en-us)AppleWebKit/533.17.9(KHTML,likeGecko)Version/5.0.2Mobile/8J2Safari/6533.18.5</p>
<p>AndroidN1<br>User-Agent:Mozilla/5.0(Linux;U;Android2.3.7;en-us;NexusOneBuild/FRF91)AppleWebKit/533.1(KHTML,likeGecko)Version/4.0MobileSafari/533.1</p>
<p>AndroidQQ浏览器Forandroid<br>User-Agent:MQQBrowser/26Mozilla/5.0(Linux;U;Android2.3.7;zh-cn;MB200Build/GRJ22;CyanogenMod-7)AppleWebKit/533.1(KHTML,likeGecko)Version/4.0MobileSafari/533.1</p>
<p>AndroidOperaMobile<br>User-Agent:Opera/9.80(Android2.3.4;Linux;OperaMobi/build-1107180945;U;en-GB)Presto/2.8.149Version/11.10</p>
<p>AndroidPadMotoXoom<br>User-Agent:Mozilla/5.0(Linux;U;Android3.0;en-us;XoomBuild/HRI39)AppleWebKit/534.13(KHTML,likeGecko)Version/4.0Safari/534.13</p>
<p>BlackBerry<br>User-Agent:Mozilla/5.0(BlackBerry;U;BlackBerry9800;en)AppleWebKit/534.1+(KHTML,likeGecko)Version/6.0.0.337MobileSafari/534.1+</p>
<p>WebOSHPTouchpad<br>User-Agent:Mozilla/5.0(hp-tablet;Linux;hpwOS/3.0.0;U;en-US)AppleWebKit/534.6(KHTML,likeGecko)wOSBrowser/233.70Safari/534.6TouchPad/1.0</p>
<p>NokiaN97<br>User-Agent:Mozilla/5.0(SymbianOS/9.4;Series60/5.0NokiaN97-1/20.0.019;Profile/MIDP-2.1Configuration/CLDC-1.1)AppleWebKit/525(KHTML,likeGecko)BrowserNG/7.1.18124</p>
<p>WindowsPhoneMango<br>User-Agent:Mozilla/5.0(compatible;MSIE9.0;WindowsPhoneOS7.5;Trident/5.0;IEMobile/9.0;HTC;Titan)</p>
<p>UC无<br>User-Agent:UCWEB7.0.2.37/28/999</p>
<p>UC标准<br>User-Agent:NOKIA5700/UCWEB7.0.2.37/28/999</p>
<p>UCOpenwave<br>User-Agent:Openwave/UCWEB7.0.2.37/28/999</p>
<p>UCOpera<br>User-Agent:Mozilla/4.0(compatible;MSIE6.0;)Opera/UCWEB7.0.2.37/28/999</p>
<h2 id="浏览器识别"><a href="#浏览器识别" class="headerlink" title="浏览器识别"></a>浏览器识别</h2><h3 id="1、IE浏览器（以IE9-0为例）"><a href="#1、IE浏览器（以IE9-0为例）" class="headerlink" title="1、IE浏览器（以IE9.0为例）"></a>1、IE浏览器（以IE9.0为例）</h3><p>PC端：User-Agent:Mozilla/5.0(compatible;MSIE9.0;WindowsNT6.1;Trident/5.0;<br>移动设备：User-Agent:Mozilla/5.0(compatible;MSIE9.0;WindowsPhoneOS7.5;Trident/5.0;IEMobile/9.0;HTC;Titan)<br>由于遨游、世界之窗、360浏览器、腾讯浏览器以及搜狗浏览器、Avant、GreenBrowser均采用IE的内核，因此IE浏览器判断的标准是”MSIE“字段，MSIE字段后面的数字为版本号，但同时还需要判断不包含”Maxthon“、”Theworld“、”360SE“、”TencentTraveler“、”SE“、”Avant“等字段（GreenBrowser没有明显标识）。移动设备还需要判断IEMobile+版本号。</p>
<h3 id="2、360浏览器"><a href="#2、360浏览器" class="headerlink" title="2、360浏览器"></a>2、360浏览器</h3><p>PC端：User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT5.1;Trident/4.0;InfoPath.2;.NET4.0C;.NET4.0E;.NETCLR2.0.50727;360SE)<br>移动设备：暂无<br>360浏览器的判断标准是”360SE”字段，没有版本表示。</p>
<h3 id="3、搜狗浏览器"><a href="#3、搜狗浏览器" class="headerlink" title="3、搜狗浏览器"></a>3、搜狗浏览器</h3><p>PC端：User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT5.1;Trident/4.0;SE2.XMetaSr1.0;SE2.XMetaSr1.0;.NETCLR2.0.50727;SE2.XMetaSr1.0)<br>移动设备：暂无<br>搜狗浏览器的判断标准是”SE“、”MetaSr“字段，版本号为SE后面的数字。</p>
<h3 id="4、Chrome"><a href="#4、Chrome" class="headerlink" title="4、Chrome"></a>4、Chrome</h3><p>PC端：Mozilla/5.0(Macintosh;IntelMacOSX10_7_0)AppleWebKit/535.11(KHTML,likeGecko)Chrome/17.0.963.56Safari/535.11<br>移动设备：User-Agent:Mozilla/5.0(Linux;U;Android2.2.1;zh-cn;HTC_Wildfire_A3333Build/FRG83D)AppleWebKit/533.1(KHTML,likeGecko)Version/4.0MobileSafari/533.1<br>PC端chrome浏览器的判断标准是chrome字段，chrome后面的数字为版本号；移动端的chrome浏览器判断”android“、”linux“、”mobilesafari“等字段，version后面的数字为版本号。</p>
<h3 id="5、Safari"><a href="#5、Safari" class="headerlink" title="5、Safari"></a>5、Safari</h3><p>PC端：User-Agent:Mozilla/5.0(Macintosh;U;IntelMacOSX10_6_8;en-us)AppleWebKit/534.50(KHTML,likeGecko)Version/5.1Safari/534.50<br>移动设备：User-Agent:Mozilla/5.0(iPhone;U;CPUiPhoneOS4_3_3likeMacOSX;en-us)AppleWebKit/533.17.9(KHTML,likeGecko)Version/5.0.2Mobile/8J2Safari/6533.18.5<br>由于Chrome及Nokia’sSeries60browser也使用WebKit内核，因此Safari浏览器的判断必须是：包含safari字段，同时不包含chrome等信息，确定后”version/“后面的数字即为版本号。在以上条件下包含Mobile字段的即为移动设备上的Safari浏览器。</p>
<h3 id="6、腾讯浏览器"><a href="#6、腾讯浏览器" class="headerlink" title="6、腾讯浏览器"></a>6、腾讯浏览器</h3><p>PC端：User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT5.1;Trident/4.0;TencentTraveler4.0;.NETCLR2.0.50727)<br>移动设备：User-Agent:MQQBrowser/26Mozilla/5.0(Linux;U;Android2.3.7;zh-cn;MB200Build/GRJ22;CyanogenMod-7)AppleWebKit/533.1(KHTML,likeGecko)Version/4.0MobileSafari/533.1<br>腾讯浏览器的判断标准是”TencentTraveler“或者”QQBrowser“，TencentTraveler或QQBrowser后面的数字为版本号。</p>
<h3 id="7、Firefox"><a href="#7、Firefox" class="headerlink" title="7、Firefox"></a>7、Firefox</h3><p>PC端：User-Agent:Mozilla/5.0(WindowsNT6.1;rv:2.0.1)Gecko/20100101Firefox/4.0.1<br>移动设备：User-Agent:Mozilla/5.0(Android;Linuxarmv7l;rv:5.0)Gecko/Firefox/5.0fennec/5.0<br>Firefox的判断标准是Firefox字段，firefox后面的数字为版本号。</p>
<h3 id="8、Theworld"><a href="#8、Theworld" class="headerlink" title="8、Theworld"></a>8、Theworld</h3><p>PC端：User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT5.1;TheWorld)<br>移动设备：暂无<br>Theworld浏览器的判断标准是”Theworld“字段，没有标示版本号。<br>需要注意的是：Theworld2.x版本的User-Agent中没有”Theworld“的字段。</p>
<h3 id="9、遨游"><a href="#9、遨游" class="headerlink" title="9、遨游"></a>9、遨游</h3><p>PC端：User-Agent:Mozilla/4.0(compatible;MSIE7.0;WindowsNT5.1;Maxthon2.0)<br>移动设备：暂无<br>遨游浏览器的判断标准是”Maxthon“，Maxthon后面的数字为版本号。</p>
<h3 id="10、Opera"><a href="#10、Opera" class="headerlink" title="10、Opera"></a>10、Opera</h3><p>PC端：User-Agent:Opera/9.80(WindowsNT6.1;U;en)Presto/2.8.131Version/11.11<br>移动设备：User-Agent:Opera/9.80(Android2.3.4;Linux;Operamobi/adr-1107051709;U;zh-cn)Presto/2.8.149Version/11.10<br>opera浏览器的判断标准是opera字段，opera字段后面的数字为版本号。</p>
<h3 id="11、UC浏览器"><a href="#11、UC浏览器" class="headerlink" title="11、UC浏览器"></a>11、UC浏览器</h3><p>UCWeb有多种模式浏览方式，对应的User-Agent为：<br>UC无<br>User-Agent:UCWEB7.0.2.37/28/999</p>
<p>UC标准<br>User-Agent:NOKIA5700/UCWEB7.0.2.37/28/999</p>
<p>UCOpenwave<br>User-Agent:Openwave/UCWEB7.0.2.37/28/999</p>
<p>UCOpera<br>User-Agent:Mozilla/4.0(compatible;MSIE6.0;)Opera/UCWEB7.0.2.37/28/999</p>
<p>UC浏览器的判断标准是”UCWEB“字段，UCWEB后面的数字为版本号。</p>
<p>操作系统定向<br>操作系统定向依赖于各个浏览器在打开页面时所传输的httpheader信息中的User-Agent</p>
<h2 id="User-Agent中的不同操作系统的识别方法。"><a href="#User-Agent中的不同操作系统的识别方法。" class="headerlink" title="User-Agent中的不同操作系统的识别方法。"></a>User-Agent中的不同操作系统的识别方法。</h2><p>PC端：<br>FreeBSD<br>X11;FreeBSD(version no.)i386<br>X11;FreeBSD(version no.)AMD64</p>
<p>Linux<br>X11;Linux ppc<br>X11;Linux ppc64<br>X11;Linux i686<br>X11;Linux x86_64</p>
<p>Mac<br>Macintosh;PPC Mac OS X<br>Macintosh;Intel Mac OS X</p>
<p>Solaris<br>X11;SunOS i86pc<br>X11;SunOs sun4u</p>
<p>Windows<br>Windows NT 6.1   对应windows7<br>Windows NT 6.0   对应windows Vista<br>Windows NT 5.2  对应windows 2003<br>Windows NT 5.1   对应windows xp<br>Windows NT 5.0   对应windows 2000<br>Windows ME<br>Windows 98</p>
<p>移动设备端：<br>iOS<br>iPhone OS 10_3_3  </p>
<p>iPhone/iPod<br>OS 4_3_3</p>
<p>Android<br>Android 7.1.1    后面数字为版本号</p>
<p>WebOs<br>hpwOS/3.0.0</p>
<p>SymbianOS<br>SymbianOS/9.4</p>
<p>Windows<br>Phone OS </p>
<p>Windows Phone<br>OS 7.5</p>
<p>BlackBerry<br>BlackBerry OS</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;UserAgent中文名为用户代理，是Http协议中的一部分，属于头域的组成部分，简称UA。&lt;br&gt;向访问网站提供你所使用的浏览器类型及版本、操作系统及版本、浏览器内核、等信息。&lt;br&gt;通过UA，用户所访问的网站可以显示不同的排版。&lt;br&gt;浏览器的UA字串的标准格式：浏览器标识(操作系统标识;加密等级标识;浏览器语言)渲染引擎标识版本信息。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://weibo.com/categories/JavaScript/"/>
    
    
  </entry>
  
  <entry>
    <title>解决jQuery表单submit报错的问题</title>
    <link href="http://weibo.com/2018/01/15/%E8%A7%A3%E5%86%B3jQuery%E8%A1%A8%E5%8D%95submit%E6%8A%A5%E9%94%99%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://weibo.com/2018/01/15/解决jQuery表单submit报错的问题/</id>
    <published>2018-01-15T12:09:03.000Z</published>
    <updated>2018-12-14T09:46:11.751Z</updated>
    
    <content type="html"><![CDATA[<p>工作过程中遇到表单提交的时候报错，于是在网上了找了找文档，发现如下解决方案，完美解决工作问题：<br><a id="more"></a></p>
<h2 id="问题：解决jquery-submit-提交表单提示-e-h-is-not-a-function"><a href="#问题：解决jquery-submit-提交表单提示-e-h-is-not-a-function" class="headerlink" title="问题：解决jquery submit()提交表单提示 e[h] is not a function"></a>问题：解决jquery submit()提交表单提示 e[h] is not a function</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;form id=<span class="string">"login_form"</span>&gt;</div><div class="line">    &lt;input id=<span class="string">"submits"</span> class=<span class="string">"manlogin"</span> <span class="built_in">type</span>=<span class="string">"submit"</span> value=<span class="string">"登录"</span> /&gt;</div><div class="line">&lt;/form&gt;</div><div class="line">$(<span class="string">"#submits"</span>).click(<span class="function"><span class="title">function</span></span>()&#123;</div><div class="line">    $(<span class="string">"#login_form"</span>).submit();</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h3><p>1.form表单中存在type=”submit”的标签,任何js中$(“#login_form”).submit(); 都无效<br>2.当<input id="submits2" class="manlogin" type="button" value="登录123"><br>$(“#submits2”).click(function(){<br>    $(“#login_form”).submit();<br>});<br>这样就会报 e[h] is not a function</p>
<p><input id="submits" class="manlogin" type="sbmit" value="登录"> 提交有效</p>
<h2 id="问题：原生js表单同步提交和提交前操作，以及document-form-submit-is-not-a-function"><a href="#问题：原生js表单同步提交和提交前操作，以及document-form-submit-is-not-a-function" class="headerlink" title="问题：原生js表单同步提交和提交前操作，以及document.form.submit() is not a function"></a>问题：原生js表单同步提交和提交前操作，以及document.form.submit() is not a function</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">    var_dump(<span class="variable">$_POST</span>);   //var_dump打印变量的相关信息</div><div class="line">?&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;script language=<span class="string">"javascript"</span>&gt;</div><div class="line">    <span class="keyword">function</span> SendForm () </div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span>(CheckPost()) </div><div class="line">        &#123;</div><div class="line">            document.addForm.submit();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"> </div><div class="line">    <span class="keyword">function</span> CheckPost () </div><div class="line">    &#123;</div><div class="line">         <span class="keyword">if</span> (addForm.user.value == <span class="string">""</span>) </div><div class="line">         &#123;</div><div class="line">               alert(<span class="string">"请填写用户名！"</span>);</div><div class="line">               addForm.username.focus();</div><div class="line">               <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">         &#125;</div><div class="line">         <span class="keyword">if</span> (addForm.title.value.length &lt; 5) </div><div class="line">         &#123;</div><div class="line">               alert(<span class="string">"标题不能少于5个字符！"</span>);</div><div class="line">               addForm.title.focus();</div><div class="line">               <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">         &#125;</div><div class="line">         <span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">    &#125;</div><div class="line">&lt;/script&gt;</div><div class="line">&lt;form action=<span class="string">"test.php"</span> method=<span class="string">"post"</span> name=<span class="string">"addForm"</span>&gt;</div><div class="line">     &lt;div&gt;用户:&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> size=<span class="string">"10"</span> name=<span class="string">"user"</span> maxlength=<span class="string">"20"</span>/&gt;&lt;/div&gt;</div><div class="line">     &lt;div&gt;标题:&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> name=<span class="string">"title"</span> maxlength=<span class="string">"50"</span>/&gt;&lt;/div&gt;</div><div class="line">     &lt;div&gt;内容:&lt;textarea name=<span class="string">"content"</span> rows=<span class="string">"8"</span> cols=<span class="string">"30"</span>&gt;&lt;/textarea&gt;&lt;/div&gt;</div><div class="line">     &lt;div&gt;&lt;input <span class="built_in">type</span>=<span class="string">"button"</span> name=<span class="string">"submit"</span> value=”发表” onclick=<span class="string">"SendForm();"</span>/&gt;&lt;/div&gt;</div><div class="line">&lt;/form&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<h3 id="问题原因："><a href="#问题原因：" class="headerlink" title="问题原因："></a>问题原因：</h3><p>当表单<form>…</form>中含有name=”submit”时，提交时就会有冲突，这个错误常见于按钮上，如:<br>在javascript做submit()的时候就会出现冲突，这时将name=”submit”改成别的比如login之类的就可以了，反正submit在这个情况下是个保留关键字。<br>在表单的输入框中使用了<input name="submit" type="text">，这样也是不行的。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;工作过程中遇到表单提交的时候报错，于是在网上了找了找文档，发现如下解决方案，完美解决工作问题：&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="jQuery" scheme="http://weibo.com/categories/jQuery/"/>
    
    
  </entry>
  
</feed>
